%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 933.000000 243.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.3.1 (Build 21E258) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1866 486
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1866 486
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: AndaleMono
%!FontType1-1.0: AndaleMono 1.0000.2.0000
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin
/FontName /AndaleMono def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /zero put
dup 34 /x put
dup 35 /two put
dup 36 /colon put
dup 37 /w put
dup 38 /a put
dup 39 /l put
dup 40 /e put
dup 41 /t put
dup 42 /W put
dup 43 /space put
dup 44 /braceleft put
dup 45 /u put
dup 46 /s put
dup 47 /d put
dup 48 /one put
dup 49 /c put
dup 50 /o put
dup 51 /i put
dup 52 /n put
dup 53 /C put
dup 54 /less put
dup 55 /U put
dup 56 /S put
dup 57 /D put
dup 58 /greater put
dup 59 /v put
dup 60 /comma put
dup 61 /braceright put
dup 62 /j put
dup 63 /p put
dup 64 /y put
dup 65 /J put
dup 66 /P put
dup 67 /Y put
dup 68 /m put
dup 69 /underscore put
dup 70 /r put
dup 71 /M put
dup 72 /period put
dup 73 /six put
dup 74 /five put
dup 75 /three put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 0 1 index div -447 2 index div 1229 3 index div 2038 5 -1 roll div]cvx def
/sfnts [<



560000010114000003FA058B000A005E40350704170402060405048D07061407070606040707051705021001050507040903990112070300090506010601098B40030B0C038B182B01182F1A4DED33332F2F3C10CD1239003FFD3C3F332F5F5E5D123939872E2B877DC43130005D290135211105352533112103FAFD1A012BFEE601318D01178F04488DA49DFB04000100CD000003D5059E0016008D405A87100103070F170F0208680701150302038E141514141415770E870E020702010208021802280258020401140309150C990B09990E040215990112880698060203140306020006890811381102110C150C1103070267020200022F5F5D17332F2F5DEDC4111239395F5D003FED393FEDDDED111239395F5D5F715D870E2E2B87057DC43130005D5E5D5F5D290135003E01353426232207273633321615140E01012103D5FCF80127B06E8F8163A71797A5BDE777BAFEF30252770149E0F67A76883D8D40D5B27FFAE6FED700000100C7FFE503DB059E002500B4404D072187210202D713E71302E8120103001299D71301081301081313061F1D99071C01671C01001C1A99671F01021F040899090B990613A817B817C817034A170103380E480E0267228722020222B8FFF8B30E123603B8FFF0401F0E103600221212081789220E8987030108030103C71D011D031D07080100082F5F5D33332F5D2F5D5DEDD4ED12392F11332B2B5F5D5D5F5D5D003FEDDDED3F5F5DEDDD5F5D71ED1112392F5E5D5DED395F5D5D3130015F5D011E0115140423222737163332363534262B013533323635342623220727363332161514060702BE819CFEDEC5A885208B8880B5C2A02B0C9AC8907E6D8716888ABDF5956902F624BF77BAFD4A87419F7D7B9A87917B64713B8D3EC79C6CBB18000100E1FFE503E70583001A006F404507031703020802650401030016021513990202081A9917030A99680B01000B0D99081348105810020218108908051805680503050A050A15008B07162716471667160400162F5F5DED3933332F2F5DEDC45F5D003FEDDD5F5DED3FED12392FFDC61139393130015F5D005F5E5D01363332161514002322273716333236353426232207271121152101B24441C8E8FEF2C2B97D218891819F96765654620285FE0A034A12F5B7C0FEF53E8B39A6958D98212D02A28F00000200BCFFE5042B059E0015002000E7402ED8170101481588150202E80AF80A0201470A0100250A350A02B50A0102EA17FA1702030714010901670077000219B8FFF040691B1D36A7190102070E670E020A280801580868087808C808D8080503D7020116001F990202080E10991113990E04199907081708020B020813181C010327050102270001030810010D00101C8905164200890B40070B170B02020705170502100022057C02210B7B02








018E59B0332BB00288B8010054B00488B8020054B012435A5B58B80119B101018E851BB900010100B04B60858D592B1DB0644B5358B0801D59B0324B5358B0901D59002B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B73732B2B2B2B2B2B2B2B2B2B2B2B2BB1282645B02A4561B02C4560442B2B2B2B2B2B2B2B2B2B2B2B01742B2B2B2B2B2B2B2B73732B2B752B2B2B2B732B2B2B2B002B2B2B2B2B2B2B2B2B2B732B7373012B2BB018B0234B53422B2B5E735E74737373732B2B2B2B2B2B2B2B7473735E735E2B2B2B2B2B73732B2B2B2BB109322B4BB05052424BB008524BB008505BB01A23424BB0C8524BB036505BB00C234200
00>] def
/CharStrings 44 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/period 3 def
/zero 4 def
/one 5 def
/two 6 def
/three 7 def
/five 8 def
/six 9 def
/colon 10 def
/less 11 def
/greater 12 def
/C 13 def
/D 14 def
/J 15 def
/M 16 def
/P 17 def
/S 18 def
/U 19 def
/W 20 def
/Y 21 def
/underscore 22 def
/a 23 def
/c 24 def
/d 25 def
/e 26 def
/i 27 def
/j 28 def
/l 29 def
/m 30 def
/n 31 def
/o 32 def
/p 33 def
/r 34 def
/s 35 def
/t 36 def
/u 37 def
/v 38 def
/w 39 def
/x 40 def
/y 41 def
/braceleft 42 def
/braceright 43 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {0 -447 1229 2038} readonly def
/UniqueID 4431224 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2879D1054E5B90CB1B147F4CC6EB6AD4386AE0BDF659B61C06C81B92D1A82292CA01744287F79B4935A8BCB72F7CE7BBDEE98CB05680367BACA0E98B4E415AB3AC4D17E77799FFF8BDB8EA643CB4F9ECAEF1BE5EE71C3F16283D4177788998C86AA672B92FE534E130754C6B2960ACE0DA3A068069EA66EE9C23C1C7C54C4DE58DBBAE8006FDE6B3A845EFF2BCD71F40F50C64EA4978C43BADBD4BADEAA81BF84C9C2D67C010C5DC35BB4EAF758A6A17E6514935F1594A88A3361FA0EE4FE1FDE2AF3144233EC1583C0A005ACFC399F406B7AF8A7ED720C006BEA3BCAC1899A9FF80AC8572879B28F409EFD4714CC0C2F5BD292CC5E247C2793F1C6243CC724733A78D93C552AE475150004152BC90D109E50E6D342C19A268ED024E994DC413219E4855C36E880E55247E2A43952BBA94E9EE91D9C016BEC2B764F67921FCEB1DCA398243A95BFCB202AC4488E5BD7FB9861E59FF14619071B7FF0E2330B319D9D234F41FEF9734E5588B69DA9C3BA9A4D1014F2D9D7F2B49414DA201DD246B822FDE0570D06A3CD54D67F9496D3118CD72DE750EF31DDBD4E81E6A2F28B7D8323AD051184FDE4453A18BC39421277B35819411B9548FBF6AC90408710A5FC8895BAE945CD902E74B08C4FF18873ADC719143F33C357E556EDAE4118159CFC06AD803AC4A8132CBBB10B9450B23294A65861DB625FDB7C8ED8D1E9A5394E75DA52B7447990800C3DFDB85C7E049BDB3EC7854D42DBB8C22A7ADE20B899204CE905F6C21B

17281F8254B135E38E97FD8A508EB7016030849CE306966F90EEF0AC44FA533015CE6626E3CF9204C3CEDA2AD84378EC89FC98EE0A055BF98A98EEF7DEE626E6DD237664AD5FD7D91FF50CE394844C8B69BE158C28BBEBFBF885FAACBC5B58F995E2C3FC52D88A859936626B3C35EBDE9B9B8581F1C04069ACBB1320E886082DA25405D1E9EED182EB43533E4643F4A58FFCA5459FCEEB8C6E0694B743E0677DDFFA9E67BCE1F3D1642D04FD717869B785C3A364FFDC4D542CBD3C37CE83FC7A0E516CD50D7F69DDD401526E20B625A61D3689D55341E99E3B3F414DF50FBA9697548FD1E1EA12470ECD45390FD1E40D9AC4821C537F0F49B695810202CAC5E431B7CE9B13E5A902306B54E3B2452C08DC47D95D59B194EFC080A3FF5D3C4EAA45F871A2A339D226D4307932D9B3C792D3CC7AB86EF66958A10DCC7B9751BDADB6AA0823309D19C7A1F5F82833ABD7013AE0611ABF9A933B0704B84C40ECC20D105F7F4FC5F6034C00660EFB55AFD5EFCA9081BB8017263AEAA22063B422A5D9C5EB9C67929C0607B4C1E504810424EBDFC03A6686A4BB703B77089169B3FAA50BFF558D2284A93EBC0B087D354AE20C0A7EF661628688C7D8CE47DB2949A558A03349E6BA867422FE9748B4F0EE51BE6D12DF683D5545AF2F2C25816045871A9E9C8835FCDD0001B5FD9DED6B4FB6797CE0CBC76CF7A9DC6657A511CF22E61869BBE9943D06679BBCD8FDA64EBCE6B68196D71BC5981F818CE242E417817A6FB5B5B08688AA8AB09215CA923BAC55D6831F2ED10BB73DEF6DFA432C6D15752E228B332966AA8777CB6A75505DA10FBE6C7A357C1DBB501CF9832842DFF00401A351D18425F8081877BD1EDC4FC8773F35E4E7D1A621C0F06EDEBBAF5BC3F8D108BF989C4F04503918750B94BA62929F0FFA7B97B144B5F9AD38E02D514BBE81FDFEEA4C5ED2F04585E8E425A5FC19CA1943D6CB61C7B7999B3190D0706C7AE3E4CDD87AF14BAD0F597DF9D651F062ACA7DE2091C4CA09CC3850401D378F11F3CFCBABCA757E184CB99EA3D0EE5617D7DA42ECB21F7565FE1F48E1A983334E0F7A4D52F5577D63F4054CAFAF6BFFF40FF05B555121F89AF75430E5E1CFA547A722D9925981637CDFD6FFCD044C1738E020145A7E776036DAA6A67B2B09AD2C7E9B98FBF6CD7282502960F38AD07BE33DEA01D683281BC43ACAD44BFA5E0AEC5F7E7053A6B49C5E14A732D3A5C6DC4D38CCDBEB1CAB428681F4307FE939BD9F2282EDE39A01FC7BDD2EA9A5A6D98E267A3588F1BF380917D9086EFD23F2E66803790ED21A034653DB3E907D255EEF01BD3C49BB05F2CCA60E3676B4A327E3FAB58774CEED47BDC00656661BB6DF32EFEECDD1D69890B9430E414BFD62E40E59473412EAF7055E0C97F014B5670E4836133A7C1F53EAA4C8E1BAB23E7C03D98887
BFCEE63680FD8B659B73F4A1E68AD07524702E8FBBD598A6B161601921FB5B6F7FF908E7EDBD5029C7474753CB976908BEC7E3BA60AFAC695AEA4E14DF2045141BE5EF60C51B85A0A0B49DC0BF7461546228E45F3A3538DC4BAC4F8B1F75129F5073B6E5329CB2719D08A1A6845F6B9E75CA658D16EE55CD9D0558F54999CF12A5152C67B253A1EF73CC951E35EEC75EC5904E354797B92E7E5E95948B08A32370350970498E112097F9A2A6E4E838322E283801C907C3321FC11EA923DD24B8138DFE1E7AF335269B70C83FCC8E4F6CB46AD107ECBCC4E13849259C17A23D98E16A311917CB6FABF6E5D59FC392A53CA418B1738FA6A0D54E5D71C52FB1D36C3C9EFF44248409BC2D8A7CAACAB191F190EBA1B5B02B3FC28BCB779D86A7A3BFC951EAA840038153C6361C575BAF1656B6936B35A08610DB26A54C52F31BD3C1212669AE7EA5708A36EDB243F4FCD8285A9F2BE4783E2282D95CD16364172179390DF263382F632286D1D5F65146C8E6BA9864C28684FE745A6B648ACAB25969D9CE9CBBB6766F6A20D2777DEBC867DFF081C2176179898BEAD776EB129DA7CE08B5244C18F359D0A6613ADDC1EA3002D943E29228C4F4348C032CDF345F2E2C18FBE012659B077BB9A745414BB0FEB7EA0DB424E31D1D70105347769C01BA96AE9EC405E1479D9BAE9993F73E157A7FBF243573E7785EF62F2B3E1B9F526CB0034E5388859D953BB1135EC929C3A896D68D8CC3EDF5F45E79906BBF7C72CCA2AC0025FCD8601F06E3D619A2EB56570586FC026B84C70DEFE6AC7C0F17AD2AF8CAD0C756F84F9399124BDD844B42FA3CF9E996A05D4300A2DEF79050597ACFC300F395C0D1491B95921E15757B6EF6728BC01001A3C878096F8EBA1241FBE7F5F24235D6D78FF0830B497691DE84067BEC6305CB193B556560B4B9974715A5339E8C4585F0B102D6F71FDFB7BA6151AF07D504B573B3D39CDB0D8720A5FE9D8F70099A7306666C3631F9D42EBA756288A64233131AF58143EC8E8CEBF3A70E9170DE9E7E5EF4860CB08E6963C1FA2B253D3A9A35AECA6D357A85D03D18EDA588D8F244FC7649327F299C420F6FC059840630F8E14FD0F8C8678B8470351B783F27FB9AF4304C1C8D75DEB8A88F8354BC2620D71C9338BD72A89F76B55511C3325AD175A28A1F20ACD778661E11A2F541811EB3578A5361CCAA0A0ABD7056A640C16CCF862D35E88DF10CCEE6FD43B8D315F98F2F7EEFF32EFDC015A9E97F864BB50C87E448E8E7E6C8C59C199E23DAF4B70A6E4EA7FD61FACE8058161ED93224D7747A55683222C16314E48D1E09BBAD856236D744816F524C246660F612CDF4D9871A8893D80DC585E1BD12357A182F0D5443CD88D5D436A4707C6248F5797BF6CF25A5931341B92CDA77713CC13F4E4E73BB88A6E2EE4403F670CE398828AF
4D3125969D1F89E33B0D0F9EFCD19CC4D0BDD56EAE8C9AFF03447D05F18CD2AC5F2AF37466EA202F1A88B234FC33733E7E60AF6B27780BAE8D83604BABC198FEA7BFE9DBF286359DB85055102629921C6A03E4474D62E69D70FC9A5AA937B4E42C30133897ED75E4975D25E0769C9B6DFF4293AA8E33BAD14CBB15B50BEB4E215974953B601F2031F206923ADA37E1A2498EEC4F56A56B0806F0B51BFF8B5EB7F9445F6C08FA5862E981C1391B7BA523ECD66E677EE2384542316CA04E9177985A62912AFFE3F3C8E9C431FF5ABF86FB61F81DC242DC083798E2D52CCE2DD5DD8DDAA16014A2DD8996D709352ADD9EFC111DF5796B0B6A4CA263CB22AAD425EF9E19818528D424A3C8225C468EA4B5AE1E4ED8A634D0E9E797C72C70FB65740FF7991F1299BEDCF5C9AE0598C72C849E64C7449CFAB3CD5C1AAF80F121FEFE0BAEE909DE7958DA359F450FB108F0652A1FE96EF9131C1B531E83B7A9EFF422F17399328FE4E283A2579EE547BD2A1F6D82337827A4E1225893434BF0DB2902CDE7F2051D8E47054C9068CA6E10C593AD573765EEE66AE8DC4C875CC85DC997EF23A1AB9585C678F0BA832442B675FAB730ABAABF6C14D93AD93811658D457D9131B14DF3F00C1E6DED8949DA097E9D91BB0CB9477413FD207B926A1671F9F960EE6288EF2BADB141898F7A74D130076B54FF20CA7D9CD555F23AD9B34992F5B4895AFEB7D116E6F2008B1DC20F2B1DC0E9957F2B1B447BA43DA7BE29A2CC8F6A5DB3F9E0731AEDCC750398F79C0DFEF0614EACF13DC58404F2159C3D46F788AD0C407A57658F552999254F23F15FB4600D100DF6AAB40889A6275CEAAE44D9BC54D6F55FE030BB3E5F522BF31DCBED59EFA48881E5DDB714D6FBA90FEE5C55AC950276DDC84D2832CD7CA04DF026172D879A6E39448FDDD8A769C559067F3204F41C864C0A0B9603C24CBD0BB4A17592D3A2F429A260EEE9E9E02D48432BAD8501141652A957FCC6BFF99BA47888E8CB2B4D2538EE1DAC424386155AC2318EBE2196BDE4969B107D0A773CCE3F3763CD5BC6C003962455B5D5A14CF11867214E1A71E869F828EDDFA7BAE5F68846A417D133BAE1DA2DAE1C093B5C9178618AF10E56834B17F4554A8C73B16C0BD46A4F55695D3B2F471CF259533493799C447E42148752E61D68F9E67997E72E9C7FCF3C2DD03C2FD98824B31CB7EF892A0DAC08E02D12F02BEA7EA7460541C269528595CFB2DC41736C415F239F6F1F0B0E121D6AC0947C3F0087B2F3A9388DAFEC11ADC8DCB8C10FE053EF03257A05335180FCA97A493773274C3D510FBCFEBF8EF9AADBA1335995182515B25ABFE4B3CD6BEFF6E42D019F84D09F90E5E0E5F4E61536AF8FECCECBADC34AB79A1736B95564F811FFADC16BFD0987260194A7C65A8F26EEF4CDB4D7A46D20DFD4CF0F0E7158
C6476FD5555908FE1363151C40EAD5CA76EEB8C4968AC929C750939E5BF17E88D6ED921D9A742B2BE54F6645DB359783393B2F7AC201DFD7DC6FB60891B3A0104A0E32132700FD7981E0D7DB90D0ED07BAB89512ED0598C55EA3973FFE1FF8AC76B90E997E7F22301256F2FF2A31386D614B02C3A16A42091761AAD3B8A02F37F5094A8DCE4C7E5118BE83602DC267A71FAA350BB0FE7780E49D47C84038B3949D8ACF1EB5772425D2E905D2C55109D352F1A961E4742FA0B2DFE7F63FA328FE0806776B193AFF9C33893DFD90363106D79A4D5B4AE7D10C75B1C47E12AD21B472126300697B42D702727E771A1573CAEAFCFD5405BAD2125E951091DF5525572CDBCF7BF921D0A94B0B0F2DAD48A40DE7CD8B0645A1FD8F38B235C825E6B8313F78F0FD3F5CE940FFD6ED2173352883CC7983CFAD902890E2A1D1C472A56A6E536A63D725B434718D931E3FCF749DDAA2D60B3E87301739E5758F65856C4B788F4CA55B2716BBDE93E6283D58D0E24B179691F15DEC69BEB1A3B3AE0B01590B6C8DA8895D7579CB2CAE32405BEF31207040B08932DF0C7701CD687CBEA8A9FCBE7775862D819C57EDC8EB8531E031B022A7B88A5C78696981B0601A9924DB48C807F13D16C4CF814C88EA80CD01E92359F0462D4DD4C1D3A9E71427BC56E72F79052F3A84DB424791FEB85E5962EC0673A8B8B9A481CC2AC02425D15478E329CFE1EFCB628B5D392949550CE0720A24FC2FF4656F382DB59B6A196E0F2F0F0B66D39967D29BFE40D1EAD4354C7E374D1701CECB6C5AEAF0C16AC413A44877D5BCC72522FD2E712175ABF647D5C92688440B40251E55E069C7F286EFCE6ABDD7616AEF2010729BE75D2B40E22BC7A401E79A53259D798C40378B3407D8ECAAFBA8DD17FC0FA6431660670E1CF71D15C8379ED3B995F7DDCAE6971C99F595DA64A559CB383900DEE837F0ECA8267AB938B384C8F3A8D2DE860A5856C370CCCF3512B29CE43DBF64FEEB1B4C1C6A9BFD8619AEBEA804C9E2DDE4AB113FFB21B2F9B4F6787B5AAC748F44AC157216B498CF8CEAB60594831DADB2D6D82A6CB4196B26302BAD30CFFD8EB3186445B4A3D324E1C93F55404F1780E77E1F1C1FC825D41C4BC60EDC91C6C845F6FCD1AAE2F7CE38370866E84D1A4918938FCFA9E59452D327BF9A1BCE41B34476FC949053151CC3BCEA2E6C7D58F554CB92F3DFEDB41736477EFCFEB93245FC8A962524F0787B6F983B479FEB68125CA2E9FFB90876863F13CC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/AndaleMono cguidfix
/F1.1/AndaleMono renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1866 486 rc
360 316 m
1122 316 l
1122 36 l
360 36 l
h
360 316 m
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -1192 1054 cm
776 369 m
1157 369 l
1157 509 l
776 509 l
h
776 369 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 14 0 0 -14 0 0]sf
781 387 m
(!"#$$%&''\(\)$$*&''\(\)+,)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
781 403 m
(++++-./$+!"0$$1234$$52346!"#$$%&''\(\)$$789:+,)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
781 419 m
(++++++++;&'-\($+!<)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
781 435 m
(++++=)[ 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
781 451 m
(++++>?@$+!"0$$1234$$52346!"#$$%&''\(\)$$ABC:+,)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
781 467 m
(++++++++;&'-\($+0!<)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
781 483 m
(++++=++++)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
781 499 m
(=)s
/Cs1 SC
1 1 1 sc
CM
1170 316 m
1528 316 l
1528 160 l
1170 160 l
h
1170 316 m
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -1192 1054 cm
1181 369 m
1360 369 l
1360 447 l
1181 447 l
h
1181 369 m
S
/Cs2 SC
0 sc
0 i
1186 387 m
(D2/-'\(+D@E1234+,)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
1186 403 m
(++++.\)F-1\)+G@5234+,=)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
1186 419 m
(++++HH)[ 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
1186 435 m
(=)s
/Cs1 SC
1 1 1 sc
CM
1170 120 m
1864 120 l
1864 2 l
1170 2 l
h
1170 120 m
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -1192 1054 cm
1181 467 m
1528 467 l
1528 526 l
1181 526 l
h
1181 467 m
S
/Cs2 SC
0 sc
0 i
1186 485 m
(!"0$$1234$$52346!"I!$$D@E1234$$G@5234:+,)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
1186 501 m
(++++;&'-\($+J!<)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
1186 517 m
(=)s
/Cs1 SC
1 1 1 sc
CM
2 316 m
310 316 l
310 198 l
2 198 l
h
2 316 m
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -1192 1054 cm
597 369 m
751 369 l
751 428 l
597 428 l
h
597 369 m
S
/Cs2 SC
0 sc
0 i
602 387 m
(!"K$$1234$$5234+,)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
602 403 m
(++++;&'-\($+0!!<)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
602 419 m
(=)s
/Cs1 SC
1 1 1 sc
CM
212.32245 470.23398 m
243.89258 451.87936 243.89258 422.12064 212.32245 403.76602 c
180.75249 385.41129 129.5675 385.41129 97.997551 403.76602 c
66.427429 422.12064 66.427429 451.87936 97.997551 470.23398 c
129.5675 488.58871 180.75249 488.58871 212.32245 470.23398 c
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -1192 1054 cm
702.16125 291.883 m
717.94629 301.06033 717.94629 315.93967 702.16125 325.117 c
686.37622 334.29434 660.78375 334.29434 644.99878 325.117 c
629.21368 315.93967 629.21368 301.06033 644.99878 291.883 c
660.78375 282.70566 686.37622 282.70566 702.16125 291.883 c
S
/Cs2 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
654.37689 314.5 m
(!"J!)[ 9.601562 9.601562 9.601562 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
673.68964 331.99994 m
673.81616 359.1001 l
S
0 i
CM
155.70694 319.79996 m
161.6322 335.82779 l
149.63234 335.77179 l
h
155.70694 319.79996 m
f
0 J
0 j
2 0 0 -2 -1192 1054 cm
673.85345 367.10001 m
676.8161 359.08612 l
670.81616 359.11411 l
h
673.85345 367.10001 m
S
/Cs1 SC
1 1 1 sc
CM
1404.3225 470.23398 m
1435.8926 451.87936 1435.8926 422.12064 1404.3225 403.76602 c
1372.7524 385.41129 1321.5675 385.41129 1289.9976 403.76602 c
1258.4274 422.12064 1258.4274 451.87936 1289.9976 470.23398 c
1321.5675 488.58871 1372.7524 488.58871 1404.3225 470.23398 c
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -1192 1054 cm
1298.1613 291.883 m
1313.9463 301.06033 1313.9463 315.93967 1298.1613 325.117 c
1282.3762 334.29434 1256.7838 334.29434 1240.9988 325.117 c
1225.2137 315.93967 1225.2137 301.06033 1240.9988 291.883 c
1256.7838 282.70566 1282.3762 282.70566 1298.1613 291.883 c
S
/Cs2 SC
0 sc
0 i
1250.3768 314.5 m
(!"I!)[ 9.601562 9.601562 9.601562 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1269.7972 331.99966 m
1270.0479 359.10043 l
S
0 i
CM
1348.2437 319.79984 m
1354.0955 335.85461 l
1342.0959 335.74368 l
h
1348.2437 319.79984 m
f
0 J
0 j
2 0 0 -2 -1192 1054 cm
1270.1218 367.10007 m
1273.0477 359.07269 l
1267.048 359.12817 l
h
1270.1218 367.10007 m
S
1 J
1 j
0.60000002 i
1237.0936 322.48795 m
1138.1646 365.08478 l
S
0 i
CM
1069.6335 317.50281 m
1086.702 318.31958 l
1081.9563 329.34131 l
h
1069.6335 317.50281 m
f
0 J
0 j
2 0 0 -2 -1192 1054 cm
1130.8168 368.2486 m
1139.351 367.84021 l
1136.9781 362.32935 l
h
1130.8168 368.2486 m
S
1 J
1 j
0.60000002 i
1310 308.5 m
1399 308.5 l
1398.0626 456.60019 l
S
0 i
CM
1604.024 124.79993 m
1610.1252 140.76163 l
1598.1255 140.83757 l
h
1604.024 124.79993 m
f
0 J
0 j
2 0 0 -2 -1192 1054 cm
1398.0121 464.60004 m
1401.0626 456.61917 l
1395.0627 456.58121 l
h
1398.0121 464.60004 m
S
ep
end
%%Trailer
%%EOF
