%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1340.000000 370.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.3.1 (Build 21E258) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 2680 740
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 2680 740
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /V put
dup 34 /a put
dup 35 /l put
dup 36 /i put
dup 37 /d put
dup 38 /t put
dup 39 /o put
dup 40 /r put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<



112BB8000020457D691844B800002B00
00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/V 1 def
/a 2 def
/d 3 def
/i 4 def
/l 5 def
/o 6 def
/r 7 def
/t 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4124212 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28A34314447AEE989C9D5F058EB91AA64CFFCFD907A0DD23543824D922E57D7C4883211A2271066BA2524F670D3375003754D0B4BE3CF934D4554CCC35E25B52CC3BED941AF640648A919893C1AE592F7CA09B4927628DFC6D4AFCFE914D41F69B808A4067C339D1147A5AA57F4603C16CF3957A2525910C01362DCEAF55A98AAD061B0EF3A854A7CE83B21576DE93F3AF5F04FFF6AC5E04F27EFF91C0C19B7672C405FB701645C91503E39439F909A4361CD4D9F6A99C5A3F5D69DA53EA7199C815283BFBFD5476A90D0D0867A8EC027A5D02F4DCBB240E7FBEF24620DD8F7583DF92E15A393E3A00E4DF1597522B61BFD196DEE1901B0026C7048A6B91ED902573A264FE553F91F90E8AEE6E8D115ECC5E785BE4C4B61A7C699F7A72C66E91EFBDF6AD697D58098BB6DDFA35523838C32F5534184AF074A478D9A3FBEA5D381D68F7E97A2D507A917E1C2282ADC19BB40CB8E4EB049C62ECAC0663A495C746B6E23DFF03925889F405FCA1A8263F398849EABC56DFBA5FB0988EF89B594DD0410C1E6B79F2056EEDA4846476B51FE408AAEDDF2CE0CB3F58ED00015A954F1342FC1A2CCEAE9558BB46DBF906D576D88A50271DA474B6FD593D4E6FFEB68C17DD86CE053E09EB30FCF4821D453340196604D46B2DF783C2057732188303D1D69CF58160AF05F582C22D3433D00DFCB9CA58E31393879547D403ECA41EA9629B221ACDC270B2993C73B3759F8490801651CF9BFB93E8DF9750F2768F8C932E80DF3F0D7DB

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F1.1/HelveticaNeue-Bold renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /C put
dup 34 /o put
dup 35 /n put
dup 36 /t put
dup 37 /i put
dup 38 /u put
dup 39 /s put
dup 40 /r put
dup 41 /a put
dup 42 /c put
dup 43 /d put
dup 44 /e put
dup 45 /m put
dup 46 /l put
dup 47 /S put
dup 48 /b put
dup 49 /space put
dup 50 /B put
dup 51 /k put
dup 52 /g put
dup 53 /P put
dup 54 /x put
dup 55 /h put
dup 56 /L put
dup 57 /fi put
dup 58 /O put
dup 59 /v put
dup 60 /G put
dup 61 /p put
dup 62 /f put
dup 63 /y put
dup 64 /comma put
dup 65 /I put
dup 66 /q put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





1239B8000210B80015D0411B0006002E0016002E0026002E0036002E0046002E0056002E0066002E0076002E0086002E0096002E00A6002E00B6002E00C6002E000D5D410500D5002E00E5002E00025DBA0021000C002E111239B800212FB80020DCB8000110B8003EDC00BA001B002600032BB8001B10BA0007003300032BB8000710BA0029001100032BB8002910303125112315232E0123220E0215141E02333236373315140E0223222E0227231E0333323627222E0235343E0233321E0215140E0201FE5001175231435C38181D3A563A3259160211263A2A152E271B015502283D4B247C74EE2A38220E11253A292838231011243B2C01D94A2B2B334F612E355F472A2D30222B48331D091420172A3A24107E98233946232544341F20354222244839230000010040000001EC02CA001A0051BA001A000000032BB8001A10BA000E000B00032BB8000E10B8001A10B80002D0B8001A10B80018D0B800182F00B800002FB800012FB8000C2FBA0013000800032BB8001310BA001900010000111239303113113311343E0233321615113311342E0223220E02072311405513263927313855112A443317312D240A0202CAFD360124233B2C183830FEA201542A45321C0A1521180111000200450000009A02CA00030007002FBA0001000200032BB8000110B8000210B80004D0B8000110B80006D000B800052FBA0001000000032BB800011030311335231D011133119A5555026268685DFDFB020500000100450000020702CA000B0033BA000B000000032BB8000B10B80002D000B800012FB800052FB800002FBA000800010000111239BA000A000100001112393031131133353713330337230711455550B16CDCCD72EC02CAFD36C44AFEF20149BCE201A7000100450000009A02CA00030017BA0003000000032BB800031000B800012FB800002F303113113311455502CAFD3602CA00000000010040000003150211002A00B7BA0003000000032BB8000310B8000DDC4103005F000D00015D4103008F000D00015D41030020000D00015D410300B0000D00015DB80010DCB80018DC4103008F001800015D4103005F001800015D41030020001800015D410300B0001800015DB8001BDCBA0023000D0010111239B8000310B80028D0B800282FBA002900000003111239B8001B10B8002CDC00B800012FB8000E2FB800192FBA0026000800032BB8002610B8000810B80013D0B8002610B80020D0303113113311343E0233321E0215113311343633321E0215113311342E02232206072E01232207233540550F2135251D25160955483F1F27160855192D3F2733551A104E306D3A020205FDFB01420F2D2A1E111F2A19FEAD01423C48121F2A18FEAD017B283924112E2A3028584C00000000010040000001EC021100170045BA0003000000



00>] def
/CharStrings 35 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/B 3 def
/C 4 def
/G 5 def
/I 6 def
/L 7 def
/O 8 def
/P 9 def
/S 10 def
/a 11 def
/b 12 def
/c 13 def
/d 14 def
/e 15 def
/f 16 def
/g 17 def
/h 18 def
/i 19 def
/k 20 def
/l 21 def
/m 22 def
/n 23 def
/o 24 def
/p 25 def
/q 26 def
/r 27 def
/s 28 def
/t 29 def
/u 30 def
/v 31 def
/x 32 def
/y 33 def
/fi 34 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28031C17829BEE98293CCF96BAF13971F3C4CDD5E6FE2DD02A8EDB11D8D36D558DE1A8793F5801ACADF6DCD2C324074E2DFF3E44C987DFABBA3EF15CC66522724D979F33E79788477D680C031A6B9957354E36D4B9A5E6FE0BFB34D832008C465A5D67ECE7655523B58E9683DEE875475291E84ADD560B783652F95DB7BDCC48B619E720AC44E28F68A5DBC4833FCB7BCD980D00267A3C79885EB07C26AC12BADBB517B2CD4B26072DE77D3008C35CC0875A22AFA6E376199AAA80C834177AEF0DCDD014932A7E448C3653998304868DA837C5B1E01277EB1A4E72B1E8E0A024536F35CCA208CC5CB35D8442859F1D2CA2220952710FAF81A9C885FDEDCE1D5A60E133EEE0EDBB1B90BE5D341C7AD899EC987A47BB9D99B19DC1B986AE7D170969D2440055E1DEDF7819A13FD74A87EF9CD54205DC2034155BCBCC858FF71342F9DDA1761B83D23B6C361C3067954696EA7ABD6BE3D670987A5DFD654D1A4B030FFB4E494DE8D2C044B8359A02B24454D704F6AF923ABF200206D260CA50D3E0C991DC6E99A4BF7C47D8C87C4364E2A962AE0F80019BD8E9D76E8F85FF042346DEAB616EE2100576F732F113FCF9C7E19006CC54592F471C93A83B691B251A3947E001332C72E8E76CF821D926C66F70AFE58E8442E99C1A9898B3FFCFF90356FE2B7553451F151A56744B588DF1CFC7D935226C31D72852735A7F3B6C5260E1B508365B49DEE2225CAC6AAD1951758E2C2CD5F996567CF1F350F13A2AF3CF64DA5C989E3
639B56852BF2299C725BFF434F71717607B6501856894E0AC4C834345C9B0851CD1C7600BC61E975A597F9721FD347D251D785D7AC8A92AB9B7F976C06940F8663947DB54A207BD489377737CDDAD24263EE515D0C45C95B5CECF3B9AE6AB57B6607BBF0F0D6B0DCCA1D0899EDA29B08E56C965F00B61CB89402BFD4D41FDC13677411A83D90AD250B3B900F14D78B84C4F24B32CB5365CD5E9FB73E4123387C422172E6861CD2CD1865509F4302C9EB29DE8A52A653CD5C664B87CE91F9564AAD8B1E99D55F7BA1620A3B13A290A5586245B7CE8869C7739400AD7FF0E0BDA3BF33A6C31A9C571C33F43C3DB9F658375C72655C097A08D57D8FFA259AF339CA77D8ECBDB6E4CBB5F9D68B623DC8DB8271F930285D380B21DF102AF726ADC3226B20B8CCD9EDBFE46314B43CD4BAC1A7BDE3688B0F9DE57BF816B5FD7D7ABF6C76FAF2507E54138E871063B75A9CB328E770DA2CA69F957F6910DFA36C2AB4EA5372A06639390CAEBAB086EA5A9CD4C8CDAD852A304A69D22BFB059136FBF79508BFDA4646F23F98F6E8844A9956C0275FCD732E40E6991A27C1394983127C2F16BEBE68EB1DE6698274C22D76B9D83D3DE5B212F8ADC76B6C2C49435B5237B6E8A6B71BB9CAC59DF8E448D20246D649BE345DEEFEE7DD5DEAD1C3794402F22367CE1379FED581CBBC1143F38B7A9B206822B49FE208043D208A822E11A15D2539C1123224990254BF2AB7F5DB586005B2D7682399EB5FC43B3E653AAEBD3E4F847C7F831CBF4EB3897527498B738923D50E25485C0B9CA09347797719A918C4E4E2D879F0559D88232511B461AB3FE733CD6AE926C88619C761B20EBDCD87D416BBC372787706D00667FDB9388D6EBEF9028E007C9B556B57B6BF6DBD032B2B5E93B8D94E294C30A95FD5A5588C89AEBD265AC354E648D3DE85348597C9C4306E90EE56125550A9F34BFD1B94D41269FF952DB33018641F47A0375BEBD93AD3ECF5EF7344DF883475100D690E7A911E260CBD4B7823E34C0C506A7C7561EC60E6A4A53E862E1A2669DEF671A6B29878C2724BBA5885B1221F1023C583541820752122B74CCC9639B464271792069515914901C85B9705B3A4EDC7D9004342364427840BC8FA56F9381293CA6D06A57C4C27384BC5A51C56998FD91996886D5C568C75158A1E4DA92B777158AB6587D149805F8248A2A101FFF85AF9EB89126055DDBB0DDA309B78AC2ECD277D80B924DF5767C2EDCAD02BAAA0C0B599C22F7EBD95DB6A529EBCC8182DDA2593436C7A8A66DCD6E91A4161B049832BCDB21066BCEB388673F6D64BA7943326224AA75DC9D1D18B3EC1A823E9B133060D8C7992DDD7CECA8D88D8EE5FCD6F8B112A12835B2F205BE85F7A08725F25DB99668BE8DE503B469C8E8F2A841F5BAE68F37A6307F7782B370096A06D83EEC7C6870C2A
6FF5C1A635F5D080171101153C68AA5D9E5CBE0F0AADCC1AD15E0B4922D952368BDF0E61F074AA8C953A38693F80E9B4925931335F004935BF9E7E1B68F65179C6DC7DCB51D1F7D6E0DFBB673D380630731A711E961335AFCE143D4FB7983B511826325B103FC1E3B9D8664B2CAC2B6D33FA3944D0B1E502BD6B15A13B8FF05EAFEC53A0E6D309942E055CD59E1E6C900FC50C9A8DFC54DD0E44A13BC7E4E2D0186F39359743EFC18359A49F606341A39CD88C654FE23123A6F870F94F293B1EDCFF59B7EEA14AB571E526AA5D00451AE07E63A73E834AA7B8F45A4D15AC2D54E88DDB0E7B51C6450BA27DF8C4A28B9667B97CBCBDB7886DFA11604EA227D2F0CD9003846231D164B2B3364BD755065C69AEEE2E6D3198FB90A1C945D9BAD80A54FB8F414A56F18FECFF5776A4940294B2DB63F43B08ED7B97F6EAA8D93B7074FADAA44BAE152444847FE7145EC1C8F29FDDC2F1F2B7620CA0D506964B9F77895154576F5FBC823476BF07B022AE00BDB1A8251517D094FEBE0FE3953EF881D2FBA08C1B4CC77DD49693D286AF087664BDC59F3C981DC24C3D329664D7FC3484972053DF6DAEE295F799DEF6FA6CAE53A78114BABAE375107A45F62990C106DD8623680AB42492AC06F247F36E16EF48F6D0CC384467D6683BBB2508E2D07D5710901405D3247ADE819B9DB20770719C5381C25A398DD89EE356597B547B779026753520078BFDA3920D88E9AB5DDD8A0D67669112B54C47EBC44F1C2BC25DEF1DAEB0CA836302ABDDD0F6782B5FF6B39FB507A77A407C97612CFA218B8574D26E2CA882DF078DE711D837A7E314CD484EDB4BD28CD0F8F01B2CAA2F7727F674EDA968572E81BE8246D0194E111E322F9F589AE2E905BF65F6BAF1CFAB326EAF97832160B656ECE7893FC0F2C1E07C797FBBAF286CEA11A91ACC1FF8E4E899B9D4E343B5A70D8FBCC5B9063FBDD8274CAB2B9E49C7CD820D4E2D4C48AFC33EF2ECA73A4B699E4D9D68059E5F8A5E031A6E7DACEC2ECA5A93AAABA74AB7769F08614936DA9401C5F5A0AB3D68CCB685AD551B2B95773F443A9481B7FA0AF7FF5CA6A3E08BC22F647641F637218E60A0C43AA7FC5DD6A35CB7A3FA5392CA873BCE4DB8B4C5567FD1B45E062AF9727F936D141E6BA82C710662D5A3A808EE0CF14D27C2554B35D65BB9AE309B99D4311A3FCA5BDCB6BAA5B0AB9E1BE6270678349504F8E4A4236E2EF5B7E04046B8B7F28782C3B22BE88CE9124FE79156BB68A62EB22667A8BD1D27C8B232D163F9BB60675645CDD35146005FA8A4C20F82A736F582DC4A534394930A2D46CB7C8B3F23A71F4CD6BC957310505979A1725FE7D7F6DF2C47EBDFA32431826BED77B970DE55F88C87D6ADF8642E8B0400AE3338988799A0E52F4F0FCD0022F756796AC40138E674A292578AFF650C50CEDCDB228235
66CCCE268DE56A7E4C50A01EC52FF216C042C5F45A9C5F6B86DDBAB9CABD28F17A8A732B999BBFF8BCBB0517EF6ED149CDB1F1D3BF034F712058708E40664F5CBCC9A2164094DE02DF9F8C138052A94CEDA32908FDB71D107B5A9750D680E25021C53777D8BE268EE63FC69DFCF9449B8FC6322886E2CEE0467864BDDD9C3F26703BF21C281244E8973EEECDCACB107BAE9D553CA887442063ECC90E2D5C6115109B142FE3315944670D3216259490A455BCEC8BC0D8212CEDB230700E6FAE4271600E04218BE76474F3A550FF9EDEAA021CF83967B5A7295DEAAE1BD9E07A6EE5C476EFE1CFC51E1CDCCA871C958E983C24847FADC261CF999BD5EAAECB3388277294F6A35874EC0546A5719E7B6BABC794C57E688B39613B5F92AFFAD31A3CF0D72EA5638779144D89477C48827FCD7CA8D5F0189EA6473D5F3FDBC42DA75CA54582D011B4C306D4BF4D69ED95652CF5D72D59599B9138938BAF16488CD78751119E5BD7DF1B23B6FD65CFD24594D7351A3FE7DBDBCF34156C236F9A9E7E59BA7167D269931D1C255D5C9CE439C96A43CAC381EE92FD3C75A95C5C5099649C4135A7F04928440755B928A165EA2C4DF1F58CD9BD5B62FD13ACEE7E645AC080D4149BCD35879FBE7BA177E979278E486E4463BC69CA8AA6741DC1E59D2E30F2B16F27D1B269780EF7010BC36F7CFFF08412574F4FA8B14829C6007904101CCB51BFE320F4769F8EDD737790E14E6EC7E41E0C00D467E21A380260D7E25810FCAA575BF94640E8A584802F6C66AB4738ACAD89AA4EEB3C0F11D027F85B5BAD25DFA5B131EBA486C0446C97A61170C2018E59A720745E1B47095F48677E75188A61CAF31F60BC05AA3B54B98D0D8ABBCACB6C820906EC0BAB1FAF752D26FBC947FB1A42F6CCB7CFDBCEE76A83DF3D1FBBB456AEDF7A66CEE769159AC5679FE5181349A141E7E65DDEC10B47A646C0B6360C7164F30BF17154B4BA8D45BB35BA1886777D78055D31CB00B14D935A2136F71A36062F51E914BFCFD7587F756B7D38F88EDADB3777299744894D3A7CB13B4483AC9BCC491791D5950D7C87B7F9D42A54BD87F7C83A1411615633BF750F81181D70AADA3CEB1C970AFC2895D6DEE4B34471A22A18E8CD51DC1F7C18342DF8F31F6E56798099F44681122C1E67B6A7077F726A763E4881DE17C5D996958A1F685DB50A28242830D1015EE9BD1D629C45C9901666A5BE6CA45C24EE3C601E74EAD03BF4DCD3D8EC565CC8B9F1D043ED193146173620AAF2ABBDED20DE604496EB22501FB7377FAB57B3D8459BF4CD02D0E2D88413541F84FB03F587315A728E56EEA6759A5A84590536B3A3B2F3D3E07C158C0803393FC8C57C805E44A9E6502A6E948BB163EE1DB2C1D50EC3507A4723CCCC9FE5E1B84E40466DCCB4D030E9B279E06AAEC1F1FC934ADA282958E3878C

AE8A2E7FCBE9C53C7FA82706588039B879422C5FB48D6B5E4CC1E4F6027D9F5E5463DE662EE1CD4A8FD064D820838416EF91E7945283272DBDE1893C21F166E19D77F307721F8B2D40A80B8FCCB670A8496F03DC752193A0B8FFDE2D97419FAC51B3CC3407A204B63737E6034ADA3980F70FABEC8D9D4C35438B7236D7AB8DDFC39D7C3878AB3B93461BEF0A4CDD29A00FAF896A035A4FBDF3280F3CF93D9B6AA50E3EE0B226D86D64E2741EB2D1F00842C49BDE8DADA377D065D867436F3891C41CB2C7E3F6614D8FC1FF114D6E767E09C4AFE0406DD2C866C5A063293E0A3C2AB6CA7F19924253DB5F408C151C4845AC3BA20A4B47FEC164B9BF07E71F157B4BA9E8BF84838E725C1D75F1E466B6C9A792F7E654ADA15425048B352C23210AB085E8E081D697FEF5A61903D21FBE5B13B86708495E1FD5CE90C9EC4DEADB28511C3F55DEDF78E3C6A7E0CCCC8EAAB0CF000902B63EA28F8DD3700DB7ACD22E3752BEF2B7DC3CB8E6120C2684F8D8F05E25E2BD016DA9BBBC2023C0E4E4B283621C01FEF037D5E009EF3932EA7216B5046FBCECEF2BFAFC6F38B58D6D7B5B7956AFB355645CA7E7831BD4B8C0AE4F4278F61A41E976BEC44D2A514EA572129402326D96A470A37ED9EE64D507F162693E17363B5BC28F4B6F4EBE09FFAD912624B1AABE113552AFFFDEC33FDF234853475D333ECA8C2E32344DEE4A6406F1AB7F34A942997097C2FF1B7ECDFF23B24500AB7ABE00CAF1B1E4C8088A5D9C8730A3C6853BA3D5891A406FAF8EE6FE60CD2D92A69881CA975857BD0F16AC6AADC71CAA32408E62F18291520798AF6BF9AE01FDDE0F9AF14B5D4359DB8317B9189ED352704B5809F8CB29721C293DAF61A9B5C43C7EF21F3AC6ACD05AEEA9B925507E0C29D9DE1F530C4BA2ED6FDFC513C4B85071569EA38B24F2FB18A9D963270B24B43811C43E43F7FB3D070A92CEC79BB71F318A7C66490AFC152C2373A6A7A6826DED598B4CCF4B5C7A0FC36538E4A3D308942DAFEEFE9695B509E2265ED80DFE084F9FEA3A2955B141E0365E5FB4E5836B0BF35BC0EC24EE8FB1479067B3B2B908C9F172D410B1E9A234BBF00385D532F46533EB09F556B7296780608BE89F2E5E36751A7C037E242E6E2F639D50D9383E7252AF264F17874C431BF33F1021FBDAC0DE850720939E3219D77F811D3E424836A3EA4C40436FB55713DB83F46EA33092036BE6AF9B93D08E76A5214420C4345565B9315FF613FB93FDFAF91D63A306318B5C631CBC345326C5DB39BB0DD530C0111B43EF5E960C1EE636B202106DB08994576FCE331A87460337335C24E17F8471922977F04AFD6C64C3657ED82A568D7279BC03284544A9F4BD365042726C3AB249D91455CB28063F2DBE69D0AAC78E38CD088DCDFAF494EEC9493847F20E1BEA0629673EB36C624B84AA689C
1093B11422DD50587C96AE98158A371D38590786E1562D3ED5DF83938698C154CA7417C64D37A24B1963CA18A9B9D86115E8930E37AC3646836A0F328859CCE1AD3930C3BE3297567EA31CDCC5CA8E2B34510BAED27D11CEC4F4C5480180B33FA0C118460C34158EF15CFE294578FC07EC7598BD3A2BE8C14A6F1B5A8076F0293EFA15DC307692E5CBEFA61FFC858DE9567FAB985C4FEC3928A748F1C42E9EC4656CEED7C05116F81544C54CEEB8F9674E5434FD1B365C5D3B0B8BF3878CCF25EA05B2140F6BDEF1E1A659DFF7DA9A2B327CFA79802BA61DF10F32CA59761E65EE85D634E408EB8C9F5E9FEB39939D05DBC61E7E6CDA8DD42280321822B3E292540FDFDCB72DAD98F13A517911DD0247CABBB760EC76C567C1C8DA8E1792074489AFC7661CB7580067D850AD16C175110F5B93E595EB3D90219DEAB2166936A67C19096F9A6A11578B9D09D9C8BF77DC781A091CFA256D924D3990661AE7C248CB820527CC2DA2E52279B52E7906BF852EA0D9AF026AC37AA3C164
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
1 J
1 j
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0.5 0.5 0.5 sc
q
0 0 2680 740 rc
2 0 0 -2 -550 692 cm
548 -23 m
1614 -23 l
1614 154 l
548 154 l
h
548 -23 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 19 0 0 -19 0 0]sf
553 1 m
(!"#$%"&'\()[ 10.925000 10.906000 4.902000 4.902000 11.609000 10.906000 6.688000 11.609000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
618 650 m
910 650 l
910 472 l
618 472 l
h
618 650 m
f
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -550 692 cm
584 21 m
730 21 l
730 110 l
584 110 l
h
584 21 m
S
/Cs2 SC
0 sc
0 i
/F2.1[ 19 0 0 -19 0 0]sf
608.25549 49.702003 m
(!"#$%#&"&')[ 13.718000 10.906000 10.564000 5.985000 4.218000 10.564000 10.564000 10.906000 10.564000 0.000000 ] xS
609.67102 72.234001 m
($\(\)#'\)*$%"#)[ 5.985000 6.327000 10.203000 10.564000 9.500000 10.203000 10.203000 5.985000 4.218000 10.906000 0.000000 ] xS
598.22351 94.765999 m
(+%'',-%#\)$%"#)[ 11.267000 4.218000 9.500000 9.500000 10.203000 16.207000 4.218000 10.564000 10.203000 5.985000 4.218000 10.906000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
153.93243 623.93243 m
188.68925 589.17578 188.68925 532.82422 153.93243 498.06757 c
119.1758 463.31076 62.824203 463.31076 28.067566 498.06757 c
-6.6892481 532.82422 -6.6892481 589.17578 28.067566 623.93243 c
62.824203 658.68927 119.1758 658.68927 153.93243 623.93243 c
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -550 692 cm
351.96622 34.033783 m
369.34464 51.412102 369.34464 79.587898 351.96622 96.966217 c
334.58789 114.34463 306.41211 114.34463 289.03378 96.966217 c
271.65536 79.587898 271.65536 51.412102 289.03378 34.033783 c
306.41211 16.655376 334.58789 16.655376 351.96622 34.033783 c
S
/Cs2 SC
0 sc
0 i
296.047 72.234001 m
(!.%,#$)[ 13.718000 4.218000 4.218000 10.203000 10.564000 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
365.00003 65.5 m
574.09998 65.5 l
S
0 i
CM
614.20001 561 m
598.20001 567 l
598.20001 555 l
h
614.20001 561 m
f
0 J
0 j
2 0 0 -2 -550 692 cm
582.09998 65.5 m
574.09998 62.5 l
574.09998 68.5 l
h
582.09998 65.5 m
S
/Cs2 SC
0 sc
/F2.1[ 17 0 0 -17 0 0]sf
380.5795 53 m
(/&0-%$'1$\(\)#'\)*$%"#)[ 11.016000 9.452000 10.081000 14.501000 3.774000 5.355000 8.500000 4.726000 5.355000 5.661000 9.129000 9.452000 8.500000 9.129000 9.129000 5.355000 3.774000 9.758000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1038 650 m
1330 650 l
1330 472 l
1038 472 l
h
1038 650 m
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -550 692 cm
794 21 m
940 21 l
940 110 l
794 110 l
h
794 21 m
S
/Cs2 SC
0 sc
0 i
/F2.1[ 19 0 0 -19 0 0]sf
842.8985 49.702003 m
(2."*3)[ 13.015000 4.218000 10.906000 10.203000 0.000000 ] xS
826.87201 72.234001 m
(-,$\)+\)$\))[ 16.207000 10.203000 5.985000 10.203000 11.267000 10.203000 5.985000 0.000000 ] xS
831.81201 94.765999 m
("\(+,\(%#4)[ 10.906000 5.985000 11.267000 10.203000 6.327000 4.218000 10.564000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1458 650 m
1750 650 l
1750 472 l
1458 472 l
h
1458 650 m
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -550 692 cm
1004 21 m
1150 21 l
1150 110 l
1004 110 l
h
1004 21 m
S
/Cs2 SC
0 sc
0 i
1046.049 49.702003 m
(5\)\(\)..,.)[ 12.312000 10.203000 6.327000 10.203000 4.218000 4.218000 10.203000 0.000000 ] xS
1029.671 72.234001 m
($\(\)#'\)*$%"#)[ 5.985000 6.327000 10.203000 10.564000 9.500000 10.203000 10.203000 5.985000 4.218000 10.906000 0.000000 ] xS
1035.656 94.765999 m
(,6,*&$%"#)[ 10.203000 9.842000 10.203000 10.203000 10.564000 5.985000 4.218000 10.906000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1878 650 m
2170 650 l
2170 472 l
1878 472 l
h
1878 650 m
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -550 692 cm
1214 21 m
1360 21 l
1360 110 l
1214 110 l
h
1214 21 m
S
/Cs2 SC
0 sc
0 i
1262.015 60.968002 m
(2\)$*7)[ 13.015000 10.203000 5.985000 10.203000 0.000000 ] xS
1254.985 83.5 m
('$"\(\)4,)[ 9.500000 5.985000 10.906000 6.327000 10.203000 10.906000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
2298 650 m
2590 650 l
2590 472 l
2298 472 l
h
2298 650 m
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -550 692 cm
1424 21 m
1570 21 l
1570 110 l
1424 110 l
h
1424 21 m
S
/Cs2 SC
0 sc
0 i
1467.265 60.968002 m
(8,+4,\()[ 10.564000 10.203000 11.267000 10.906000 10.203000 0.000000 ] xS
1447.5715 83.5 m
(*,\($%9*\)$%"#)[ 10.203000 10.203000 6.327000 5.985000 4.218000 9.842000 10.203000 10.203000 5.985000 4.218000 10.906000 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
730 65.5 m
784.09998 65.5 l
S
0 i
CM
1034.2 561 m
1018.2 567 l
1018.2 555 l
h
1034.2 561 m
f
0 J
0 j
2 0 0 -2 -550 692 cm
792.09998 65.5 m
784.09998 62.5 l
784.09998 68.5 l
h
792.09998 65.5 m
S
1 J
1 j
0.60000002 i
940 65.5 m
994.09998 65.5 l
S
0 i
CM
1454.2 561 m
1438.2 567 l
1438.2 555 l
h
1454.2 561 m
f
0 J
0 j
2 0 0 -2 -550 692 cm
1002.1 65.5 m
994.09998 62.5 l
994.09998 68.5 l
h
1002.1 65.5 m
S
1 J
1 j
0.60000002 i
1150 65.5 m
1204.1 65.5 l
S
0 i
CM
1874.2 561 m
1858.2 567 l
1858.2 555 l
h
1874.2 561 m
f
0 J
0 j
2 0 0 -2 -550 692 cm
1212.1 65.5 m
1204.1 62.5 l
1204.1 68.5 l
h
1212.1 65.5 m
S
1 J
1 j
0.60000002 i
1360 65.5 m
1414.1 65.5 l
S
0 i
CM
2294.2 561 m
2278.2 567 l
2278.2 555 l
h
2294.2 561 m
f
0 J
0 j
2 0 0 -2 -550 692 cm
1422.1 65.5 m
1414.1 62.5 l
1414.1 68.5 l
h
1422.1 65.5 m
S
/Cs1 SC
1 1 1 sc
CM
618 180 m
910 180 l
910 2 l
618 2 l
h
618 180 m
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -550 692 cm
584 256 m
730 256 l
730 345 l
584 345 l
h
584 256 m
S
/Cs2 SC
0 sc
0 i
633.24048 295.96802 m
(:$7,\()[ 14.440000 5.985000 10.564000 10.203000 0.000000 ] xS
615.83649 318.5 m
(;\).%+\)$"\(')[ 9.500000 10.203000 4.218000 4.218000 11.267000 10.203000 5.985000 10.906000 6.327000 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
657 119.9 m
657 246.10001 l
S
0 i
CM
764 183.8 m
770 199.8 l
758 199.8 l
h
764 183.8 m
f
0 J
0 j
2 0 0 -2 -550 692 cm
657 254.10001 m
660 246.10001 l
654 246.10001 l
h
657 254.10001 m
S
CM
764 468.20001 m
758 452.20001 l
770 452.20001 l
h
764 468.20001 m
f
2 0 0 -2 -550 692 cm
657 111.9 m
654 119.9 l
660 119.9 l
h
657 111.9 m
S
/Cs2 SC
0 sc
/F2.1[ 17 0 0 -17 0 0]sf
506.36301 190.28601 m
(2\)$*71$\(\)#'\)*$%"#'1)[ 11.645000 9.129000 5.355000 9.129000 9.452000 4.726000 5.355000 5.661000 9.129000 9.452000 8.500000 9.129000 9.129000 5.355000 3.774000 9.758000 9.452000 8.500000 0.000000 ] xS
507.45099 210.76199 m
(\)#+1'7\)\(,10\)$*7,'1)[ 9.129000 9.452000 10.081000 4.726000 8.500000 9.452000 9.129000 5.355000 9.129000 4.726000 10.081000 9.129000 5.355000 9.129000 9.452000 9.129000 8.500000 0.000000 ] xS
508.88751 231.23801 m
($"1"$7,\(1;\).%+\)$"\(')[ 5.355000 9.758000 4.726000 9.758000 5.355000 9.452000 9.129000 5.661000 4.726000 8.500000 9.129000 3.774000 3.774000 10.081000 9.129000 5.355000 9.758000 5.661000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1038 180 m
1330 180 l
1330 2 l
1038 2 l
h
1038 180 m
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -550 692 cm
794 256 m
940 256 l
940 345 l
794 345 l
h
794 256 m
S
/Cs2 SC
0 sc
0 i
/F2.1[ 19 0 0 -19 0 0]sf
843.24048 295.96802 m
(:$7,\()[ 14.440000 5.985000 10.564000 10.203000 0.000000 ] xS
825.83649 318.5 m
(;\).%+\)$"\(')[ 9.500000 10.203000 4.218000 4.218000 11.267000 10.203000 5.985000 10.906000 6.327000 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
867 119.9 m
867 246.10001 l
S
0 i
CM
1184 183.8 m
1190 199.8 l
1178 199.8 l
h
1184 183.8 m
f
0 J
0 j
2 0 0 -2 -550 692 cm
867 254.10001 m
870 246.10001 l
864 246.10001 l
h
867 254.10001 m
S
CM
1184 468.20001 m
1178 452.20001 l
1190 452.20001 l
h
1184 468.20001 m
f
2 0 0 -2 -550 692 cm
867 111.9 m
864 119.9 l
870 119.9 l
h
867 111.9 m
S
/Cs2 SC
0 sc
/F2.1[ 17 0 0 -17 0 0]sf
724.36298 190.28601 m
(<\("&=10\)$*7,'1">1)[ 12.903000 5.355000 9.758000 9.452000 10.081000 4.726000 10.081000 9.129000 5.355000 9.129000 9.452000 9.129000 8.500000 4.726000 9.758000 5.032000 0.000000 ] xS
738.20953 210.76199 m
(-,$\)+\)$\)1%#$"1)[ 14.501000 9.129000 5.355000 9.129000 10.081000 9.129000 5.355000 9.129000 4.726000 3.774000 9.452000 5.355000 9.758000 0.000000 ] xS
726.56451 231.23801 m
(0."*3'1\)#+1"\(+,\(1)[ 10.081000 3.774000 9.758000 9.129000 8.823000 8.500000 4.726000 9.129000 9.452000 10.081000 4.726000 9.758000 5.355000 10.081000 9.129000 5.661000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
2298 180 m
2590 180 l
2590 2 l
2298 2 l
h
2298 180 m
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -550 692 cm
1424 256 m
1570 256 l
1570 345 l
1424 345 l
h
1424 256 m
S
/Cs2 SC
0 sc
0 i
/F2.1[ 19 0 0 -19 0 0]sf
1473.2405 295.96802 m
(:$7,\()[ 14.440000 5.985000 10.564000 10.203000 0.000000 ] xS
1455.8365 318.5 m
(;\).%+\)$"\(')[ 9.500000 10.203000 4.218000 4.218000 11.267000 10.203000 5.985000 10.906000 6.327000 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1497 119.9 m
1497 246.10001 l
S
0 i
CM
2444 183.8 m
2450 199.8 l
2438 199.8 l
h
2444 183.8 m
f
0 J
0 j
2 0 0 -2 -550 692 cm
1497 254.10001 m
1500 246.10001 l
1494 246.10001 l
h
1497 254.10001 m
S
CM
2444 468.20001 m
2438 452.20001 l
2450 452.20001 l
h
2444 468.20001 m
f
2 0 0 -2 -550 692 cm
1497 111.9 m
1494 119.9 l
1500 119.9 l
h
1497 111.9 m
S
/Cs2 SC
0 sc
/F2.1[ 17 0 0 -17 0 0]sf
1313.363 190.28601 m
(5,\(%"+%*\)..?@1'7\)\(,1\)#+1)[ 11.016000 9.129000 5.661000 3.774000 9.758000 10.081000 3.774000 9.129000 9.129000 3.774000 3.774000 7.242000 4.726000 4.726000 8.500000 9.452000 9.129000 5.355000 9.129000 4.726000 9.129000 9.452000 10.081000 0.000000 ] xS
1318.871 210.76199 m
(\)44\(,4\)$,1'%4#\)$&\(,')[ 9.129000 9.758000 9.758000 5.355000 9.129000 9.758000 9.129000 5.355000 9.129000 4.726000 8.500000 3.774000 9.758000 9.452000 9.129000 5.355000 9.452000 5.355000 9.129000 0.000000 ] xS
1327.524 231.23801 m
("#1$7,1.,+4,\(1'$\)$,)[ 9.758000 9.452000 4.726000 5.355000 9.452000 9.129000 4.726000 3.774000 9.129000 10.081000 9.758000 9.129000 5.661000 4.726000 8.500000 5.355000 9.129000 5.355000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1458 180 m
1750 180 l
1750 2 l
1458 2 l
h
1458 180 m
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 -550 692 cm
1004 256 m
1150 256 l
1150 345 l
1004 345 l
h
1004 256 m
S
/Cs2 SC
0 sc
0 i
/F2.1[ 19 0 0 -19 0 0]sf
1053.2405 295.96802 m
(:$7,\()[ 14.440000 5.985000 10.564000 10.203000 0.000000 ] xS
1035.8365 318.5 m
(;\).%+\)$"\(')[ 9.500000 10.203000 4.218000 4.218000 11.267000 10.203000 5.985000 10.906000 6.327000 0.000000 ] xS
[
4
4
] 0 d
0.60000002 i
/Cs3 SC
0 0 0 sc
1077 256 m
1077 119.9 l
S
0 i
CM
1604 468.20001 m
1598 452.20001 l
1610 452.20001 l
h
1604 468.20001 m
f
0 J
0 j
[] 0 d
2 0 0 -2 -550 692 cm
1077 111.9 m
1074 119.9 l
1080 119.9 l
h
1077 111.9 m
S
/Cs2 SC
0 sc
/F2.1[ 17 0 0 -17 0 0]sf
965.50848 190.28601 m
(A>1\(,B&%\(,+@)[ 4.403000 5.032000 4.726000 5.355000 9.129000 10.081000 9.452000 3.774000 5.355000 9.129000 10.081000 0.000000 ] xS
940 210.76199 m
(>,$*71$7,10\)$*7,')[ 5.032000 9.129000 5.355000 9.129000 9.452000 4.726000 5.355000 9.452000 9.129000 4.726000 10.081000 9.129000 5.355000 9.129000 9.452000 9.129000 0.000000 ] xS
949.77502 231.23801 m
(">1$\(\)#'\)*$%"#')[ 9.758000 5.032000 4.726000 5.355000 5.661000 9.129000 9.452000 8.500000 9.129000 9.129000 5.355000 3.774000 9.758000 9.452000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
