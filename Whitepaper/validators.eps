%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 620.000000 330.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.3.1 (Build 21E258) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1240 660
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1240 660
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /N put
dup 34 /e put
dup 35 /w put
dup 36 /space put
dup 37 /v put
dup 38 /a put
dup 39 /l put
dup 40 /i put
dup 41 /d put
dup 42 /t put
dup 43 /o put
dup 44 /r put
dup 45 /parenleft put
dup 46 /n put
dup 47 /c put
dup 48 /parenright put
dup 49 /A put
dup 50 /V put
dup 51 /s put
dup 52 /F put
dup 53 /u put
dup 54 /L put
dup 55 /g put
dup 56 /h put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 25 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/A 4 def
/F 5 def
/L 6 def
/N 7 def
/V 8 def
/a 9 def
/c 10 def
/d 11 def
/e 12 def
/g 13 def
/h 14 def
/i 15 def
/l 16 def
/n 17 def
/o 18 def
/r 19 def
/s 20 def
/t 21 def
/u 22 def
/v 23 def
/w 24 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4124212 def
currentdict end
currentfile eexec

E0FB68471479E02B98D63CE8E3E22F34E4E04577C80D515B18DB05FA8902C50F30FDDD493CE81650A3F09A50C48DFE9C3EBC3B203C932ACB823903D95842A6C94CFBA5341F770C1E109D205AC43028B3BC77C16FA02187D85826C8D5B769F6FB1BFBAA9B669E8A7765058551F89FAA75A42584B1F07ED3BA7EB6BA4FBB45A5F03D7B25AE308E4F1C5AA9AA4557DB1534F0419B7CC4341A55C77E5BBF6A97D2DF9406D9AD84421279D4D00433BD5F51BDBF4FE9B00836E1C564459A98F1BF953A42663DBE5011FB113E08731711FEC1A181CDC65FD9FFA58B580BDB2FA5E39F0DC85CA2DE8BD99051A2D8B112926CBB8436B896894FAADF94A02714387A163D93B0A85EDB908A6D29D80EE3121E9F7A6138E91BD25D3E3E457BDD982BA5D8A07210B7DC04D1DCD17F1C556ECD28FF3F583A90791D09BE9729650F1D9095FDB184ABBF5AF4CAF077E3AEE5B2A2E33AA11B998B1EE392CE4F6EE49BFFAD0EBFAAFC01D5BF5AE01C18F57013A665D118AAD6B8DCDF0A27EC68FDF39A2962391AEA66115A634BB7D716D7723B58A5DC2605ABEF44C77BD0F9A6F71B13AB8113D1765F608790F683A28D0EB79A21BE5B75F089361A19513E5BAF30E2E9BD012AA2FA1A969F9E9EBCCFE434FEAE847CF668038541EDF792F4A34279FC394EF3AC3F8CC00EFFF1A71CD103B54F795071BBE0A3AB3F10E918E06B690F0FF0BB49137BE19F3648C8895041E3B31FCFDC04690438441A36D4963F429C6BDBA73484008A45FF4201C75360D40800FBE09F4D79CDEAC088F386AD44052716AA9139163155E0B0704D98D27DDA67768D7FC0730CFC1CAF558206E4427F38E638A811C15B9D3CC4CDA0C95AF396B9A8DA9EA4F26707145D53681D18D778312130372C01E1B364DBD91C0BD0B95D1E2E34AFFB04FBDC13F9FF81A74AD2DC8E980939AB6ABC8BF393AC322DD4687A1FC9A3FEC6D06EE34F2346EA5EEC94318A9DB2717A6763C696944292DEBA86B9F805A9136A4793CC34F840F0051D19F4ECE7AF67B598D96683106E34FD8F64891574EC52F8342BB5D0B4FD32EE2E5FDB4269586A7B63A017F3F172151126ACD25195005E52C2C13AE1A88F93FD04F852CD5E1A382411A638C3B438836F5C14261267B0F992098B848F916AAFB52488F479F53B29B4CABC047B6D82FEFFBCD389915E018E9CD86F2A037A09304DBB0DB7E91466CCA5222DC7C1C6CEF1F542417E1A3E606415A42A4439FF706F87282C06BBD2AD3543EB8A1BF33081445C67D5920793B503992587962DD936CE4DC1824FDA67200B80E609F004A7F57AAEF938F8BC233AF6A603AA36D3D035DB63928D252A717E884859515E3A01F41B4862AFDBE4511DA8233DEBF053C238339EB4A50BF657F5AD40D97313FC38C3DF817B5D5A8FCF332E3DBEDB55D67069190B6EECC3B4D10D9BDA842AB8A8D5

0253844D59E07FB9C0B9F3FF2D1D491D01E307F4ED0DF89AF30A2A5B63330796C7B91BB47E9CF792B97FD71D5941E3158BC147C38FFE23A96056709AA23083655A15A6BAFC32FAB919A971F1E99E6722A785A17C0EF9D5A2F93D541639F67DC9AB053DBCB710CB32B79C97E9BBED3303998CD70522D9677A0241797228DE2344D2C29026F048002DEC5594C60790DA0D9FD5B53859D29DEC9C1E52518D0F36EA7DA8920301F0F18DCFCF11C9C5CAB58801112FE0DD16BB03B1CC5886088314B8976552CB8FF2C4C9CD8844DE48682D1073D1CD59576BF00CA9F4256DF6FD2AB37BE5187820B957213455F57D82D1CBB40D565DB9B108DF9765CB0D1A033F5FA848A669ECDE685458D23E1225DD0F0D6492173BF3C55BC7876C9B2A9525565EAA247AD10CCDCBE9148D9CD6656422187C73B7A34ADB881B63B7ECE3DC46CC1FD62FD3B48EFDA150BDB6761A8148C2C54AC2406B16262D6CA19303941BFC7CB4E3551013BA8AEF99F2C039F7FA5E6B85D4D61E6334D4FCBF99A9F705A4EEB686B032E57FF0CCD234BAD0718D1BE3DA08119FE641E9C78B0FC6A4BC439C2D01DBADE437356C9969B997168DDAC099579DA028D4036594A127D809B715C715D4F7AD7D18AB8CAF0554AABB5094B708DBBD9768B0EBC73CB688C7A21DB77880FAE6A8C6301B2A766BC1CE576546D08731DD59A4F1FA7211F55FE54699D2540300F145B57B4380015177AD19B9704C4CF539FA8FDFF2F50805B00DAC29F00B516B93BE16AA5225B2B226AEE2013381837B822BC0F9175B88EE6184547E65BE8DD41C97ED943A632C9A8624AD47BAB263E22C97727CB1B0E2156CDF561EEADF91D4EFFFB8D94AF38E74C65AB97DDF8EDFBBE3F2DCE8C8F1115BB38416947A3082793B9C22CBDA28B950C3BEC0BB8D82489EBB971428678BC0BE50FC212BD608EE446A530A2CEF29BEDC937C4665A8E61A7F45756FA788A642D5ADA8CB401FEC71192B4513872E5FB9208518D237E344ACDAE2E7731A4A8F3A1194279106D6558AE5B73ACD9C2FBA4A98A1A23F2860F338AAA28279BF2A967BC6394B6E57E7C65C250F52C85D99B13C88184381313D5208CF1A02B42681D00158109FAB4FA2353097FD581D87DBCF4DDB7A74BE71F5C26B01BBFA3577EB434C1CEA90D0BB4777BC194AF894D058B4689FC0F0E475A0382B7C811151CB77B170045E6C42162D479E3049DA28D3B7EB0904DE41A78602231D0536A9CBC1B7E7BB1EDC7FE56DC687BEEC2F4E6F2E10B9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F1.1/HelveticaNeue-Bold renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /S put
dup 34 /y put
dup 35 /n put
dup 36 /c put
dup 37 /h put
dup 38 /r put
dup 39 /o put
dup 40 /i put
dup 41 /z put
dup 42 /g put
dup 43 /t put
dup 44 /x put
dup 45 /s put
dup 46 /space put
dup 47 /ampersand put
dup 48 /a put
dup 49 /e put
dup 50 /u put
dup 51 /b put
dup 52 /m put
dup 53 /p put
dup 54 /l put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000186670676D00000000000000B400000428676C796600000000000004DC0000138C686561640000000000001868000000366868656100000000000018A000000024686D747800000000000018C40000005C6C6F63610000000000001920000000306D6178700000000000001950000000207072657000000000000019700000004D14000014004B005A00000011FF3A000B0205000C02CA0011B800002C4BB800095058B101018E59B801FF85B844001DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800092C4B535845441B2121592DB8000A2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8000B2C2020456944B001602DB8000C2CB8000B2A212DB8000D2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8000E2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000F2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800102C2020456944B001602020457D691844B001602DB800112CB800102A2DB800122C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800132C4B535845441B2121592DB800142C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800152C2020456944B001602DB800162CB800152A212DB800172C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800182C2046B00425465258238A592046206A6164B0042546






00>] def
/CharStrings 23 dict dup begin
/.notdef 0 def
/space 1 def
/ampersand 2 def
/S 3 def
/a 4 def
/b 5 def
/c 6 def
/e 7 def
/g 8 def
/h 9 def
/i 10 def
/l 11 def
/m 12 def
/n 13 def
/o 14 def
/p 15 def
/r 16 def
/s 17 def
/t 18 def
/u 19 def
/x 20 def
/y 21 def
/z 22 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E14745AF3F10450EAAB791828BD7007DC687000C5DB246371EAE06DFE741CAD61F7DC16B0AF023BAB227F101D7BDD1EDB63065B3E3C39B4E23EFE7AEF32DD94E527DCE7B087E80ADFBCE4EB0A626197DAEEC71BEE15465EDFFB89BCE1254BBF5FB16AAE5F4FAD5DEA34160E5CBC641A7178D11BE1741B41203F411D7EAFACDDEB5B90F05B78AF47FBE490A8214AF1D3A6EC05C5D596F27D7446381EBDAF6E3BD80F52FB527973406DCC6B8CB64BE0597325558D008454CD5E3BE000B8CA968DA996B3E2D25F6AD07051C02B7EB560FF17724ABE7C04D9296189690C0C83484AF9AE7903CD1A6F54EBAA94A43DD4EFC0475816263791BAF14C8D3591403BCD26EBEC08192DCEBA9AD48383E88D2C39E689C655E4496F86A7F23E171C936DA426332BE6E1EB8443BBB005842141DAB7B10D0EA8B367A0F6F7260C3ED6B7A69E92415DAE475E40EDE5FD40C185ED09938B6F89842C4CE905773C2C053F0D2ADF92D9149F85F17DF6D1EBDECBFE8A648B60C7E6192E8C7A374D07EC65B21179ADD8722A642A8D957C74CD63FDBA02EB6B065EE2EE56FAF2222AE5713A6E5E41D60FA39F52B0B779A5A2029827B297602470A177B788E920AFDEB1AE3D2252C1FB28620255BE0EE8BF69DCBEEF01F7FAAC8819F3772C5FBE178AF26335943276234A8E5ACC020692E997248E9EF933C0A060337452731E02F46BBA8989E24961FFC10BB2B5EC2107A9CDF87570BF9C5E702F0D657117FF2C60AB218B8FE2FCB70C732A28699
D9A81FC69FBB54FE8642283111B415518FEC159D3AA2ECFF3B34A03B7CFDE386BAE214A5EBF64B28E386E0D04951B115AF5A8F1F44B5C9C20FB7D914DD717F295588431C6D2D4510E1C9081D80130BAC919780E98379E993EEBFAE15D9BCDFFE84C84C96BABDF52B2D78986D1EB27FEDDDBA60B8DB7318D4DF9A4EE7A2D3E727963B795893EB4F4FF6AFFDD22FE940E7FF490BCA5D29BA782067DC32C842D6EFE6C5384DF14926D69A90F333A5927F224AB1707AB2573FA85BE6093E340C5BE597BD8E29CAB432D763155818ED1B215351BD409DE01F7CC746C081A7D4283C1F59C7A3BE97114BBF700A40214D7D5EC41953857FEF1DF718B7833BBD5042F478DBDADCEA9811D078205D1320896B36A67800A32C3C66EC39917A3EC7E53190FA2AA7EB5301AA13AC515C2108541D2A4E2E0D5B9EB186EFCC86AE64E1EA679F0ECE968FDA580D62FB8D6672A9DD78F71C45ED7B6778889A27DA3C524C5B8B2E36FA46AA342FDED4D51B16CDC7F063E802BFD1B71D10D8B156526347FD2FAEC28A7C7764928645F56C2FE4628B3FBE9EB0EB285D65A8972700838164AD70508AAD101E4BAF82D475AFE837C6E73940D81F35DDCF97E4790579D27342781432F25343B745258D24BDCB89BF437111D81E3970B9EEFCB3D23F99F567DD40AD03D9B11C9B3387EC8A6814C045F17A24B5676CF0B6572B49CEA3C7EE5457536B0EF2834E4BF38CE272C87613D68D242A08D9EC4766915683C83EB0C1D97BDEC69E7560256C248F5EE106A52F8B9DA25CBA88FDB4C980789CDA69845F79130E04DBEE4AC9257B61CB509947DCFD769AABF224AFBCB329EEAB31B04F917FB55A733C7F6CC3EFBA03A1FDA1310AD0A8B1083FFAFD0DF7DA50ACA3ECB4F5CD215791E3C1D6E8C7BF52C73029C3CAA2E081FBCA8EA7CE9D570DB97ECE9DB23A6A2B64354DE1797CBAA06F13AD7FB6632A49BA4081FDEAF646F337062D5E844B98D0A1076FC7D107A16F729CA63AF178CF587B3C0AC839C2030143218C7302A322414318F5C748DF378957D24D227769DEF78E8DB5EC2BE95F79B56D5516168362E64DF33703E2A9CEC9316F48F73203FFF950EE7DCA38461C3EB505A046FBA8A8057EA8C97AD6F983160E72B2C2588BE43074ABD72523B25689A445709CA9E06DB4C3518EBD3BEC6654369DFFC292C6DB972F0CA84008427FE1E73427A7630E8254F8BDBAE0B36075E756BB2A724FCF12A7D206FC3928D4DB0816DE88F61EA0DC9304BACEAB515AAC38B290CF8E071E628A4AC8C34E1A44038858706E176780DBF38123AF9F22B9A683E96E2BFFEE4191CF31FC765D5E75901E237A249E1F1DACDE26F15942ED73ADDC22F6F6ED08B5AE4183ACBCAB2E6C1BE64BAF6860F7565B414AFF1D2D56465E23D49742621F09A29C7C9BF7B5DDDA4220079DE3AA880814133360FCA1
1864B29A17FEED70D0067757E975D411C3D6224542ABFA309A73919DC24C36449A9FF5769CD4BBB735C4209257788A32FD487BA85B13A3C5BF60C0D2557362697A6177998C2DF1388850D3A46DA4AEAA70780E742B45E3810C5D457D9CF9A97E5AF987D3F5D71DD291DD349C2EE20AF90357CF7C4F4D7E93F43439435EDECFF1AD0889E6A85A9A412BB532F99B6482F34896F1AAE34C906AFACDA26B07E985C4C5F68E099F4BC377DFB7B236157A60C776910A0F9A6DC8585AEE71305265D75170B4DB14957ABDD1786B6C7DE567A3476DCC9B1DEDF550EC98110BCD24E2E8E5B1386330DDD002F9E4A1180E511D47DE77292F6F663B10FF4A848D497E6341028637AD2F167662FCDB38F3D12D659129D11FCE1C3D589E47D8B9D39D079C7989A083AF33854179AC9C2E57CF92302E0019A65BA527BFB357CDD747BB2B03E18CB6FC2D3A992CAD56D4614F01E6AE3208DDE3B5D3FB95FFC3CCB23B27851E72F26169188AB878A990B5B271F387C3CDFE7159D04DA7E6E1BD0C11EB25974B4ED1FC8BB142FAD34F332E47308935750212D8BF52DA2101081356C518FC962334C30A0799040094A5E9A4D4665EEB00578C2538240ED164FA88A5A4677F863AE520A55828E59DEC5708AEEF9F993D80C384648C1D3C8637E8ABEEF04753007BB7FBB7F0CD3F29689A4C482B4330E73EA0C5FC56473CFA9AFC94207D017F5F2CD6ABFA0B3956B89E7ACDB3D62BC67B6EEE5B978590E888574CA633091DF87431E61FDCF58C4D77268C07118932BB6DF3702B2760A36A63DCADC720920F3E8B3150768653AD14FB676BB997995EA78A1B81EA6CA7CCADBD01C49246893F95AEF1BA243AE47DBB8C5CDE0693041CDF909E584B6BED0AE0EA254B64462CB39B0694610EF0D4310CDE8EDE243B1A6DE9B4F49C87C155A47BC99120558A75CA565F4F9A5FC4386A93D59EDF9B35933DFBD06A105DF88DB5C3FA14998FAC6D9DB8B38FA18E56408CA09C49059B437402CA1828450D45CA2289A18EAF681F224CB0ED565FEA6D858E6A0C31458FAA8C3DD788617DEDFC661B30FE0202728156FEDA14256837C0D6859552A091F350959030D8BB98E6235C0A43F07FD702D4FCE4FFCF8BF8E57787831B007FF32FD7BBD820C32E55088CE47912E67C95FA1453E92F3D19822A9F2FF5C45D69436051CD17C9DE0ECF9293A426CB0716BC6D115E4F2EA10DA500896779BE5EC8B8D8A54BCC2B48F373EE3E38A5197FAC59104678C0843A3693EA1B598CB4BC8A0AB89EA9A5129E73C77E6C615EC9AB08C43B328A566F908C7C48E7A97F03F05762B30FEF500DC032C666C7FB13EB566FC9717C506CEF0162638FBAC3670BDD1D2CC5A98164A1F70686C730D978E6D8082DD1953BFB572AE77B96D98AF3471BE28F881B0981CFCF57513D7848FE747F3D193D8E828CC70A7910BA
E2265648B895247D74E97232581131CB4CE0EE35DF7365734FD079C5C84C38E777D2129525EF36474D345A9F247B8A0CD9ACF4FC20192A58796ACBE661C3AC036A7FA4FC066C20C5A948D0A41633F5A0AEDE6DEA4BAC2CD7365F8F1716871D116098B6DB528370666F35321334C27AE877D89BD2B0ECE148F3E1562BF290D6B4B990BD9EBF0C007948C3FC4B619814BCECF01C8C5F5529A7616871A22D383034A2E15707E0F610590FA24013D694EB569408DB82FFDD6A30BEDE45D9FD536568F28FC6682957869E3E133E0940210688E3E82353D2712DBC80BD365901B1CB87369655E688C59D096E3BD4E97EA8121D33FF07E48B58B5E55A09F0535C3E42408A2D8BF25D845B941C115263694D48FEB16362E940B5FE8EE4A5868DD72124F9C53833F9C85F1CE4460FE4B23D7E48F669DFC377EC53F9B093FC3EE3B7EE11F93DD354A9336199BCF87833978B30B4931565FB070F3DD372E0FC7AB12016F82CD38BEC66404E66BB64BB05BFF5C7FC4A574B0118BCB68264136AF2376DA3D92D11D828A196E53B6FA6F14137024346C1D0FEB80D712C8DB56E423651F34E063DBAF81B4CA122421BF67971262092051273395CD1B948B31350987EA30A8E7AAE275918219AE0314C25A349F7252D31B1F281EA3A53D03BD62F5EA15DB54D521B025A7E219EF84B4F33063779CD553ECBA99F195D4FB11310B791B95172C9316BDC935CF0552128E59E4D91A80A0681EF7A208607E666DACEC10A70B8E5DC3A387CFCA5031C8CE0E3DE1706F54D9F947773BC833CEB756159DDEA68398D82904DBA52B21EDDB9955764041F76E6A36C3195BC40E6088B3C252232ACB2A3CB216E87395E4B7B2207245230DB8F285625BA327ABFE62D17052E8D09B9C510BD5C30938AC3E28332A8A313E15E7983F649AC890F0FD7D02E6E4FC7847AC078994157D001C90F12E03F4B728CDC17F95BFC9804B1C208DE7D830809EF40CD06E4758A721E4243A4058BDDF9C94E6BDC1BAB59D18DADC11A8F74FDB100AE86EC320DDC538292EC8250D4A1262BE7415F791606DF3A9D61B8F8FBC87D6389A175FAC81432CA3518B2BBF9407D24D91225DEFED64107347260C20149FFA0DB479787E9C3DB287C8B2328E07D15F770B2AE89B73923DCA716BD3FFFA5F3378DC7BA7880A735FA46A43AC9F5DB104283469140E3424D0F181DFAC29B20D2D0233C3D8A7771FD5D4DB9E6929B8410064D85732EF1A68A887A2DEA176B08BD45367CE525DA8211EC046F4322179078CDFE142ADDE38CDC17D2EA32641F15151AB9F07A94FCE21614697FC63BEC8869020B5375A8A106E7DCF35747C7D3D1A52047AE71D7DD3E9A88D1ACB355BC2C82292A1C3819E6EA72460CBAE97B739CED40EA51779A8152AA26ADD78D39EA679F5B2D4031B84EA421B6E977911847F102919CC3FE443B26

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
1 J
1 j
[
1
4
] 0 d
0.60000002 i
/Cs1 SC
0.5 0.5 0.5 sc
q
0 0 1240 660 rc
2 0 0 -2 312 -498 cm
287.55118 -530.55115 m
350.81638 -467.28629 350.81638 -364.71371 287.55118 -301.44882 c
224.28629 -238.18361 121.71371 -238.18361 58.44883 -301.44882 c
-4.8163838 -364.71371 -4.8163838 -467.28629 58.44883 -530.55115 c
121.71371 -593.81641 224.28629 -593.81641 287.55118 -530.55115 c
S
0 i
1 1 1 sc
CM
512.23401 392.23398 m
530.58868 373.87936 530.58868 344.12064 512.23401 325.76602 c
493.87936 307.41129 464.12064 307.41129 445.76602 325.76602 c
427.41129 344.12064 427.41129 373.87936 445.76602 392.23398 c
464.12064 410.58871 493.87936 410.58871 512.23401 392.23398 c
f
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 312 -498 cm
100.11699 -445.117 m
109.29435 -435.93967 109.29435 -421.06033 100.11699 -411.883 c
90.939674 -402.70566 76.060326 -402.70566 66.883011 -411.883 c
57.705647 -421.06033 57.705647 -435.93967 66.883011 -445.117 c
76.060326 -454.29434 90.939674 -454.29434 100.11699 -445.117 c
S
0 i
1 1 1 sc
CM
556.23401 198.23398 m
574.58868 179.87935 574.58868 150.12065 556.23401 131.76602 c
537.87933 113.41129 508.12064 113.41129 489.76602 131.76602 c
471.41129 150.12065 471.41129 179.87935 489.76602 198.23398 c
508.12064 216.5887 537.87933 216.5887 556.23401 198.23398 c
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 312 -498 cm
122.11699 -348.117 m
131.29436 -338.93967 131.29436 -324.06033 122.11699 -314.883 c
112.93967 -305.70566 98.060326 -305.70566 88.883011 -314.883 c
79.70565 -324.06033 79.70565 -338.93967 88.883011 -348.117 c
98.060326 -357.29434 112.93967 -357.29434 122.11699 -348.117 c
S
0 i
1 1 1 sc
CM
878.23401 392.23398 m
896.58868 373.87936 896.58868 344.12064 878.23401 325.76602 c
859.87933 307.41129 830.12067 307.41129 811.76599 325.76602 c
793.41132 344.12064 793.41132 373.87936 811.76599 392.23398 c
830.12067 410.58871 859.87933 410.58871 878.23401 392.23398 c
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 312 -498 cm
283.117 -445.117 m
292.29434 -435.93967 292.29434 -421.06033 283.117 -411.883 c
273.93967 -402.70566 259.06033 -402.70566 249.88301 -411.883 c
240.70564 -421.06033 240.70564 -435.93967 249.88301 -445.117 c
259.06033 -454.29434 273.93967 -454.29434 283.117 -445.117 c
S
0 i
1 1 1 sc
CM
690.23401 512.23401 m
708.58868 493.87936 708.58868 464.12064 690.23401 445.76602 c
671.87933 427.41129 642.12067 427.41129 623.76599 445.76602 c
605.41132 464.12064 605.41132 493.87936 623.76599 512.23401 c
642.12067 530.58868 671.87933 530.58868 690.23401 512.23401 c
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 312 -498 cm
189.11699 -505.117 m
198.29436 -495.93967 198.29436 -481.06033 189.11699 -471.883 c
179.93968 -462.70566 165.06032 -462.70566 155.88301 -471.883 c
146.70564 -481.06033 146.70564 -495.93967 155.88301 -505.117 c
165.06032 -514.29437 179.93968 -514.29437 189.11699 -505.117 c
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
786.23401 198.23398 m
804.58868 179.87935 804.58868 150.12065 786.23401 131.76602 c
767.87933 113.41129 738.12067 113.41129 719.76599 131.76602 c
701.41132 150.12065 701.41132 179.87935 719.76599 198.23398 c
738.12067 216.5887 767.87933 216.5887 786.23401 198.23398 c
f
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 312 -498 cm
237.11699 -348.117 m
246.29436 -338.93967 246.29436 -324.06033 237.11699 -314.883 c
227.93968 -305.70566 213.06032 -305.70566 203.88301 -314.883 c
194.70564 -324.06033 194.70564 -338.93967 203.88301 -348.117 c
213.06032 -357.29434 227.93968 -357.29434 237.11699 -348.117 c
S
[] 0 d
/Cs2 SC
0 0 0 sc
144.80202 -469.82721 m
111.19799 -447.17279 l
S
0 i
CM
521.12921 387.40173 m
537.74994 391.37057 l
531.04199 401.32065 l
h
521.12921 387.40173 m
f
0 J
0 j
2 0 0 -2 312 -498 cm
104.56461 -442.70087 m
112.87497 -444.68527 l
109.52101 -449.66031 l
h
104.56461 -442.70087 m
S
CM
614.87079 450.59827 m
598.25006 446.62943 l
604.95801 436.67935 l
h
614.87079 450.59827 m
f
2 0 0 -2 312 -498 cm
151.43539 -474.29913 m
143.12503 -472.31473 l
146.47899 -467.33969 l
h
151.43539 -474.29913 m
S
1 J
1 j
0.60000002 i
90.888306 -395.92429 m
98.111694 -364.07571 l
S
0 i
CM
511.76236 214.54773 m
514.07477 231.47855 l
502.37201 228.82431 l
h
511.76236 214.54773 m
f
0 J
0 j
2 0 0 -2 312 -498 cm
99.881187 -356.27386 m
101.03739 -364.73929 l
95.185997 -363.41217 l
h
99.881187 -356.27386 m
S
CM
490.23764 309.45227 m
487.92523 292.52145 l
499.62799 295.17569 l
h
490.23764 309.45227 m
f
2 0 0 -2 312 -498 cm
89.118813 -403.72614 m
87.962608 -395.26071 l
93.814003 -396.58783 l
h
89.118813 -403.72614 m
S
1 J
1 j
0.60000002 i
118.61211 -362.22537 m
159.38789 -457.77463 l
S
0 i
CM
637.05585 432.26523 m
625.25726 419.90427 l
636.29431 415.19421 l
h
637.05585 432.26523 m
f
0 J
0 j
2 0 0 -2 312 -498 cm
162.52792 -465.1326 m
156.62865 -458.95212 l
162.14714 -456.59711 l
h
162.52792 -465.1326 m
S
CM
542.94415 211.73477 m
554.74274 224.09575 l
543.70569 228.8058 l
h
542.94415 211.73477 m
f
2 0 0 -2 312 -498 cm
115.47207 -354.8674 m
121.37136 -361.04788 l
115.85286 -363.40289 l
h
115.47207 -354.8674 m
S
1 J
1 j
0.60000002 i
200.65781 -470.52695 m
238.34219 -446.47305 l
S
0 i
CM
802.17114 386.33755 m
791.9126 400.00366 l
785.45618 389.88858 l
h
802.17114 386.33755 m
f
0 J
0 j
2 0 0 -2 312 -498 cm
245.08557 -442.16879 m
239.9563 -449.00183 l
236.72809 -443.94431 l
h
245.08557 -442.16879 m
S
CM
699.82886 451.66245 m
710.0874 437.99634 l
716.54382 448.11142 l
h
699.82886 451.66245 m
f
2 0 0 -2 312 -498 cm
193.91443 -474.83121 m
199.0437 -467.99817 l
202.27191 -473.05569 l
h
193.91443 -474.83121 m
S
1 J
1 j
0.60000002 i
237.88643 -411.26077 m
134.11357 -348.73923 l
S
0 i
CM
566.52234 191.22151 m
583.32349 194.33916 l
577.1308 204.61778 l
h
566.52234 191.22151 m
f
0 J
0 j
2 0 0 -2 312 -498 cm
127.26115 -344.61075 m
135.66176 -346.16959 l
132.5654 -351.3089 l
h
127.26115 -344.61075 m
S
CM
801.47766 332.77847 m
784.67651 329.66086 l
790.8692 319.3822 l
h
801.47766 332.77847 m
f
2 0 0 -2 312 -498 cm
244.73885 -415.38925 m
236.33824 -413.83041 l
239.4346 -408.6911 l
h
244.73885 -415.38925 m
S
1 J
1 j
0.60000002 i
116.90001 -428.5 m
233.09999 -428.5 l
S
0 i
CM
794.19995 359 m
778.19995 365 l
778.19995 353 l
h
794.19995 359 m
f
0 J
0 j
2 0 0 -2 312 -498 cm
241.09999 -428.5 m
233.09999 -431.5 l
233.09999 -425.5 l
h
241.09999 -428.5 m
S
CM
529.80005 359 m
545.80005 353 l
545.80005 365 l
h
529.80005 359 m
f
2 0 0 -2 312 -498 cm
108.90001 -428.5 m
116.90001 -425.5 l
116.90001 -431.5 l
h
108.90001 -428.5 m
S
/Cs3 SC
0 sc
/F1.1[ 14 0 0 -14 0 0]sf
152 -291 m
(!"#$%&'\(\)&*+,)[ 10.374000 8.036000 11.396000 3.892000 7.280000 8.036000 3.612000 3.612000 8.554000 8.036000 4.928000 8.554000 0.000000 ] xS
167.813 -273.5939 m
(-\(.&/*\(%"0)[ 4.144000 3.612000 8.302000 8.036000 8.036000 4.928000 3.612000 7.280000 8.036000 0.000000 ] xS
63.140999 -474.69617 m
(1/*\(%")[ 9.590000 8.036000 4.928000 3.612000 7.280000 0.000000 ] xS
54.853001 -457.29007 m
(%&'\(\)&*+,)[ 7.280000 8.036000 3.612000 3.612000 8.554000 8.036000 4.928000 8.554000 0.000000 ] xS
/F1.1[ 22 0 0 -22 0 0]sf
119 -530 m
(2&'\(\)&*+,3)[ 12.650000 12.628000 5.676000 5.676000 13.442000 12.628000 7.744000 13.442000 8.558000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
256.12 392.23398 m
274.4747 373.87936 274.4747 344.12064 256.12 325.76602 c
237.76535 307.41129 208.00665 307.41129 189.65202 325.76602 c
171.2973 344.12064 171.2973 373.87936 189.65202 392.23398 c
208.00665 410.58871 237.76535 410.58871 256.12 392.23398 c
f
2 w
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 312 -498 cm
-27.940008 -445.117 m
-18.762648 -435.93967 -18.762648 -421.06033 -27.940008 -411.883 c
-37.117325 -402.70566 -51.996677 -402.70566 -61.173992 -411.883 c
-70.351349 -421.06033 -70.351349 -435.93967 -61.173992 -445.117 c
-51.996677 -454.29434 -37.117325 -454.29434 -27.940008 -445.117 c
S
1 w
1 1 1 sc
-27.940008 -445.117 m
-18.762648 -435.93967 -18.762648 -421.06033 -27.940008 -411.883 c
-37.117325 -402.70566 -51.996677 -402.70566 -61.173992 -411.883 c
-70.351349 -421.06033 -70.351349 -435.93967 -61.173992 -445.117 c
-51.996677 -454.29434 -37.117325 -454.29434 -27.940008 -445.117 c
S
/Cs2 SC
0 0 0 sc
256.42783 -407.26083 m
234.81419 -361.6843 l
S
0 i
CM
774.77258 210.9118 m
787.04968 222.79765 l
776.20709 227.9395 l
h
774.77258 210.9118 m
f
0 J
0 j
2 0 0 -2 312 -498 cm
231.38631 -354.4559 m
237.52484 -360.39883 l
232.10356 -362.96976 l
h
231.38631 -354.4559 m
S
/Cs3 SC
0 sc
/F2.1[ 12 0 0 -12 0 0]sf
217 -479 m
(!"#$%&'#\(\)\(#*)[ 7.776000 6.000000 6.672000 6.444000 6.672000 3.780000 6.888000 6.672000 2.664000 5.760000 2.664000 6.672000 0.000000 ] xS
223.10201 -464.664 m
(+,#-./.-+0+1)[ 3.780000 6.216000 6.672000 6.000000 3.336000 7.560000 3.336000 6.000000 3.780000 6.444000 3.780000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
50.099987 -428.5 m
-10.156988 -428.5 l
S
0 i
CM
275.68604 359 m
291.68604 353 l
291.68604 365 l
h
275.68604 359 m
f
0 J
0 j
2 0 0 -2 312 -498 cm
-18.156988 -428.5 m
-10.156988 -425.5 l
-10.156988 -431.5 l
h
-18.156988 -428.5 m
S
CM
428.19998 359 m
412.19998 365 l
412.19998 353 l
h
428.19998 359 m
f
2 0 0 -2 312 -498 cm
58.099987 -428.5 m
50.099987 -431.5 l
50.099987 -425.5 l
h
58.099987 -428.5 m
S
/Cs3 SC
0 sc
/F1.1[ 14 0 0 -14 0 0]sf
-56.637001 -474.69617 m
(45'')[ 8.302000 8.302000 3.612000 0.000000 ] xS
-61.445999 -457.29007 m
(.+\)")[ 8.302000 8.554000 8.554000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
348.23398 130.23398 m
366.58871 111.87936 366.58871 82.120644 348.23398 63.766018 c
329.87936 45.411297 300.12064 45.411297 281.76602 63.766018 c
263.41129 82.120644 263.41129 111.87936 281.76602 130.23398 c
300.12064 148.5887 329.87936 148.5887 348.23398 130.23398 c
f
2 w
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 312 -498 cm
18.116991 -314.117 m
27.294352 -304.93967 27.294352 -290.06033 18.116991 -280.883 c
8.9396772 -271.70566 -5.9396768 -271.70566 -15.116991 -280.883 c
-24.294352 -290.06033 -24.294352 -304.93967 -15.116991 -314.117 c
-5.9396768 -323.29434 8.9396772 -323.29434 18.116991 -314.117 c
S
1 w
1 1 1 sc
18.116991 -314.117 m
27.294352 -304.93967 27.294352 -290.06033 18.116991 -280.883 c
8.9396772 -271.70566 -5.9396768 -271.70566 -15.116991 -280.883 c
-24.294352 -290.06033 -24.294352 -304.93967 -15.116991 -314.117 c
-5.9396768 -323.29434 8.9396772 -323.29434 18.116991 -314.117 c
S
/Cs2 SC
0 0 0 sc
73.748665 -321.11975 m
34.20203 -308.19104 l
S
0 i
CM
365.19614 113.41028 m
382.26849 112.67912 l
378.53964 124.08507 l
h
365.19614 113.41028 m
f
0 J
0 j
2 0 0 -2 312 -498 cm
26.598068 -305.70514 m
35.134247 -305.33957 l
33.269814 -311.04254 l
h
26.598068 -305.70514 m
S
CM
474.70526 149.21133 m
457.6329 149.94249 l
461.36176 138.53654 l
h
474.70526 149.21133 m
f
2 0 0 -2 312 -498 cm
81.352631 -323.60568 m
72.816452 -323.97125 l
74.680885 -318.26828 l
h
81.352631 -323.60568 m
S
/Cs1 SC
1 1 1 sc
CM
1126.234 484.23398 m
1144.5887 465.87936 1144.5887 436.12064 1126.234 417.76602 c
1107.8794 399.41129 1078.1206 399.41129 1059.766 417.76602 c
1041.4113 436.12064 1041.4113 465.87936 1059.766 484.23398 c
1078.1206 502.58871 1107.8794 502.58871 1126.234 484.23398 c
f
2 w
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 312 -498 cm
407.117 -491.117 m
416.29434 -481.93967 416.29434 -467.06033 407.117 -457.883 c
397.93967 -448.70566 383.06033 -448.70566 373.883 -457.883 c
364.70566 -467.06033 364.70566 -481.93967 373.883 -491.117 c
383.06033 -500.29434 397.93967 -500.29434 407.117 -491.117 c
S
1 w
1 1 1 sc
407.117 -491.117 m
416.29434 -481.93967 416.29434 -467.06033 407.117 -457.883 c
397.93967 -448.70566 383.06033 -448.70566 373.883 -457.883 c
364.70566 -467.06033 364.70566 -481.93967 373.883 -491.117 c
383.06033 -500.29434 397.93967 -500.29434 407.117 -491.117 c
S
/Cs2 SC
0 0 0 sc
297.82007 -440.11874 m
358.24216 -462.53339 l
S
0 i
CM
1043.4854 432.63165 m
1026.3975 432.69217 l
1030.5712 421.44138 l
h
1043.4854 432.63165 m
f
0 J
0 j
2 0 0 -2 312 -498 cm
365.74268 -465.31583 m
357.19873 -465.34607 l
359.28558 -459.72067 l
h
365.74268 -465.31583 m
S
CM
892.63904 376.67255 m
909.72693 376.61206 l
905.55328 387.86285 l
h
892.63904 376.67255 m
f
2 0 0 -2 312 -498 cm
290.31952 -437.33627 m
298.86346 -437.30603 l
296.77664 -442.93143 l
h
290.31952 -437.33627 m
S
/Cs1 SC
1 1 1 sc
CM
1224.234 356.23398 m
1242.5887 337.87936 1242.5887 308.12064 1224.234 289.76602 c
1205.8794 271.41129 1176.1206 271.41129 1157.766 289.76602 c
1139.4113 308.12064 1139.4113 337.87936 1157.766 356.23398 c
1176.1206 374.58871 1205.8794 374.58871 1224.234 356.23398 c
f
2 w
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 312 -498 cm
456.117 -427.117 m
465.29434 -417.93967 465.29434 -403.06033 456.117 -393.883 c
446.93967 -384.70566 432.06033 -384.70566 422.883 -393.883 c
413.70566 -403.06033 413.70566 -417.93967 422.883 -427.117 c
432.06033 -436.29434 446.93967 -436.29434 456.117 -427.117 c
S
1 w
1 1 1 sc
456.117 -427.117 m
465.29434 -417.93967 465.29434 -403.06033 456.117 -393.883 c
446.93967 -384.70566 432.06033 -384.70566 422.883 -393.883 c
413.70566 -403.06033 413.70566 -417.93967 422.883 -427.117 c
432.06033 -436.29434 446.93967 -436.29434 456.117 -427.117 c
S
/Cs2 SC
0 0 0 sc
411.41382 -447.18399 m
418.58618 -437.81601 l
S
0 i
CM
1158.8989 364.92792 m
1153.9364 381.27945 l
1144.4083 373.98453 l
h
1158.8989 364.92792 m
f
0 J
0 j
2 0 0 -2 312 -498 cm
423.44946 -431.46396 m
420.9682 -439.63974 l
416.20416 -435.99228 l
h
423.44946 -431.46396 m
S
CM
1125.1011 409.07208 m
1130.0636 392.72055 l
1139.5917 400.01547 l
h
1125.1011 409.07208 m
f
2 0 0 -2 312 -498 cm
406.55054 -453.53604 m
409.0318 -445.36026 l
413.79584 -449.00772 l
h
406.55054 -453.53604 m
S
/Cs1 SC
1 1 1 sc
CM
71.024498 225.21451 m
83.911858 212.32721 83.911858 191.4328 71.024498 178.5455 c
58.137207 165.65814 37.242794 165.65814 24.355501 178.5455 c
11.468144 191.4328 11.468144 212.32721 24.355501 225.21451 c
37.242794 238.10187 58.137207 238.10187 71.024498 225.21451 c
f
2 w
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 312 -498 cm
-120.48775 -361.60724 m
-114.04408 -355.1636 -114.04408 -344.7164 -120.48775 -338.27277 c
-126.9314 -331.82907 -137.3786 -331.82907 -143.82225 -338.27277 c
-150.26593 -344.7164 -150.26593 -355.1636 -143.82225 -361.60724 c
-137.3786 -368.05093 -126.9314 -368.05093 -120.48775 -361.60724 c
S
1 w
1 1 1 sc
-120.48775 -361.60724 m
-114.04408 -355.1636 -114.04408 -344.7164 -120.48775 -338.27277 c
-126.9314 -331.82907 -137.3786 -331.82907 -143.82225 -338.27277 c
-150.26593 -344.7164 -150.26593 -355.1636 -143.82225 -361.60724 c
-137.3786 -368.05093 -126.9314 -368.05093 -120.48775 -361.60724 c
S
/Cs3 SC
0 sc
0 i
-149.19499 -390 m
(6\(78*)[ 8.302000 3.612000 8.554000 8.302000 0.000000 ] xS
-150.60899 -372.5939 m
(/'\(".*)[ 8.036000 3.612000 3.612000 8.036000 8.302000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
-106.64391 -339.93063 m
-30.52911 -310.06674 l
S
0 J
0 j
0 i
-23.081821 -307.14478 m
-29.433371 -312.85947 l
-31.624847 -307.27399 l
h
-23.081821 -307.14478 m
S
-114.0912 -342.8526 m
-107.73965 -337.13791 l
-105.54818 -342.72336 l
h
-114.0912 -342.8526 m
S
/Cs3 SC
0 sc
/F2.1[ 12 0 0 -12 0 0]sf
-94.332001 -367 m
(!234\(++\(#*.+,#-./.)[ 7.776000 6.672000 7.116000 10.236000 2.664000 3.780000 3.780000 2.664000 6.672000 6.888000 3.336000 3.780000 6.216000 6.672000 6.000000 3.336000 7.560000 0.000000 ] xS
-83.645996 -352.664 m
(-"#$%&'#\(\)\(#*)[ 6.000000 6.000000 6.672000 6.444000 6.672000 3.780000 6.888000 6.672000 2.664000 5.760000 2.664000 6.672000 0.000000 ] xS
-78.204002 -338.328 m
(50&+\(06.-+0+1)[ 7.116000 6.444000 3.996000 3.780000 2.664000 6.444000 2.664000 3.336000 6.000000 3.780000 6.444000 3.780000 0.000000 ] xS
244 -365 m
(!"#$%&'#\(\)\(#*)[ 7.776000 6.000000 6.672000 6.444000 6.672000 3.780000 6.888000 6.672000 2.664000 5.760000 2.664000 6.672000 0.000000 ] xS
268.552 -350.664 m
(-+0+1)[ 6.000000 3.780000 6.444000 3.780000 0.000000 ] xS
31.184 -287 m
(!234\(++\(#*.+,#-./.)[ 7.776000 6.672000 7.116000 10.236000 2.664000 3.780000 3.780000 2.664000 6.672000 6.888000 3.336000 3.780000 6.216000 6.672000 6.000000 3.336000 7.560000 0.000000 ] xS
41.869999 -272.664 m
(-"#$%&'#\(\)\(#*)[ 6.000000 6.000000 6.672000 6.444000 6.672000 3.780000 6.888000 6.672000 2.664000 5.760000 2.664000 6.672000 0.000000 ] xS
65.534004 -258.328 m
(-+0+1)[ 6.000000 3.780000 6.444000 3.780000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
